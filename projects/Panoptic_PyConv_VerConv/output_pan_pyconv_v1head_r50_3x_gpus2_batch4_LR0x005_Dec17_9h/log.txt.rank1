[12/17 08:50:24] detectron2 INFO: Rank of current process: 1. World size: 2
[12/17 08:50:24] detectron2 INFO: Environment info:
----------------------  ---------------------------------------------------------------------------------------------------------------
sys.platform            linux
Python                  3.7.9 (default, Aug 31 2020, 12:42:55) [GCC 7.3.0]
numpy                   1.19.1
detectron2              0.2.1 @/home/wmao/code/detectron2_PFPN/detectron2/detectron2
Compiler                GCC 7.5
CUDA compiler           CUDA 10.0
detectron2 arch flags   /home/wmao/code/detectron2_PFPN/detectron2/detectron2/_C.cpython-37m-x86_64-linux-gnu.so; cannot find cuobjdump
DETECTRON2_ENV_MODULE   <not set>
PyTorch                 1.4.0 @/home/wmao/anaconda3/envs/detectron2_FPN/lib/python3.7/site-packages/torch
PyTorch debug build     False
GPU available           True
GPU 0,1                 GeForce GTX 1080 Ti (arch=6.1)
CUDA_HOME               /usr/local/cuda-10.0 - invalid!
Pillow                  7.2.0
torchvision             0.5.0 @/home/wmao/anaconda3/envs/detectron2_FPN/lib/python3.7/site-packages/torchvision
torchvision arch flags  /home/wmao/anaconda3/envs/detectron2_FPN/lib/python3.7/site-packages/torchvision/_C.so; cannot find cuobjdump
fvcore                  0.1.2.post20200929
cv2                     3.4.2
----------------------  ---------------------------------------------------------------------------------------------------------------
PyTorch built with:
  - GCC 7.3
  - Intel(R) Math Kernel Library Version 2020.0.2 Product Build 20200624 for Intel(R) 64 architecture applications
  - Intel(R) MKL-DNN v0.21.1 (Git Hash 7d2fd500bc78936d1d648ca713b901012f470dbc)
  - OpenMP 201511 (a.k.a. OpenMP 4.5)
  - NNPACK is enabled
  - CUDA Runtime 10.0
  - NVCC architecture flags: -gencode;arch=compute_37,code=sm_37;-gencode;arch=compute_50,code=sm_50;-gencode;arch=compute_60,code=sm_60;-gencode;arch=compute_61,code=sm_61;-gencode;arch=compute_70,code=sm_70;-gencode;arch=compute_75,code=sm_75;-gencode;arch=compute_37,code=compute_37
  - CuDNN 7.6.3
  - Magma 2.5.1
  - Build settings: BLAS=MKL, BUILD_NAMEDTENSOR=OFF, BUILD_TYPE=Release, CXX_FLAGS= -Wno-deprecated -fvisibility-inlines-hidden -fopenmp -DUSE_FBGEMM -DUSE_QNNPACK -DUSE_PYTORCH_QNNPACK -O2 -fPIC -Wno-narrowing -Wall -Wextra -Wno-missing-field-initializers -Wno-type-limits -Wno-array-bounds -Wno-unknown-pragmas -Wno-sign-compare -Wno-unused-parameter -Wno-unused-variable -Wno-unused-function -Wno-unused-result -Wno-strict-overflow -Wno-strict-aliasing -Wno-error=deprecated-declarations -Wno-stringop-overflow -Wno-error=pedantic -Wno-error=redundant-decls -Wno-error=old-style-cast -fdiagnostics-color=always -faligned-new -Wno-unused-but-set-variable -Wno-maybe-uninitialized -fno-math-errno -fno-trapping-math -Wno-stringop-overflow, DISABLE_NUMA=1, PERF_WITH_AVX=1, PERF_WITH_AVX2=1, PERF_WITH_AVX512=1, USE_CUDA=ON, USE_EXCEPTION_PTR=1, USE_GFLAGS=OFF, USE_GLOG=OFF, USE_MKL=ON, USE_MKLDNN=ON, USE_MPI=OFF, USE_NCCL=ON, USE_NNPACK=ON, USE_OPENMP=ON, USE_STATIC_DISPATCH=OFF, 

[12/17 08:50:24] detectron2 INFO: Command line arguments: Namespace(config_file='./configs/COCO/panoptic_fpn_pyconv_v1_R_50_3x.yaml', dist_url='tcp://127.0.0.1:61373', eval_only=False, machine_rank=0, num_gpus=2, num_machines=1, opts=['SOLVER.IMS_PER_BATCH', '4', 'SOLVER.BASE_LR', '0.005', 'OUTPUT_DIR', './output_pan_pyconv_v1head_r50_3x_gpus2_batch4_LR0x005_Dec17_9h'], resume=False)
[12/17 08:50:24] detectron2 INFO: Contents of args.config_file=./configs/COCO/panoptic_fpn_pyconv_v1_R_50_3x.yaml:
_BASE_: "Base-Panoptic-PyConv.yaml"
MODEL:
  SEM_SEG_HEAD:
    NAME: "SemSegPyConvHeadV1"
  WEIGHTS: "detectron2://ImageNetPretrained/MSRA/R-50.pkl"
  RESNETS:
    DEPTH: 50
SOLVER:
  STEPS: (210000, 250000)
  MAX_ITER: 270000
OUTPUT_DIR: "./output_panoptic_fpn_pyconv_v1_r50_3x"

[12/17 08:50:24] detectron2 INFO: Running with full config:
CUDNN_BENCHMARK: False
DATALOADER:
  ASPECT_RATIO_GROUPING: True
  FILTER_EMPTY_ANNOTATIONS: False
  NUM_WORKERS: 4
  REPEAT_THRESHOLD: 0.0
  SAMPLER_TRAIN: TrainingSampler
DATASETS:
  PRECOMPUTED_PROPOSAL_TOPK_TEST: 1000
  PRECOMPUTED_PROPOSAL_TOPK_TRAIN: 2000
  PROPOSAL_FILES_TEST: ()
  PROPOSAL_FILES_TRAIN: ()
  TEST: ('coco_2017_val_panoptic_separated',)
  TRAIN: ('coco_2017_train_panoptic_separated',)
GLOBAL:
  HACK: 1.0
INPUT:
  CROP:
    ENABLED: False
    SIZE: [0.9, 0.9]
    TYPE: relative_range
  FORMAT: BGR
  MASK_FORMAT: polygon
  MAX_SIZE_TEST: 1333
  MAX_SIZE_TRAIN: 1333
  MIN_SIZE_TEST: 800
  MIN_SIZE_TRAIN: (640, 672, 704, 736, 768, 800)
  MIN_SIZE_TRAIN_SAMPLING: choice
  RANDOM_FLIP: horizontal
MODEL:
  ANCHOR_GENERATOR:
    ANGLES: [[-90, 0, 90]]
    ASPECT_RATIOS: [[0.5, 1.0, 2.0]]
    NAME: DefaultAnchorGenerator
    OFFSET: 0.0
    SIZES: [[32], [64], [128], [256], [512]]
  BACKBONE:
    FREEZE_AT: 2
    NAME: build_resnet_fpn_backbone
  DEVICE: cuda
  FPN:
    FUSE_TYPE: sum
    IN_FEATURES: ['res2', 'res3', 'res4', 'res5']
    NORM: 
    OUT_CHANNELS: 256
  KEYPOINT_ON: False
  LOAD_PROPOSALS: False
  MASK_ON: True
  META_ARCHITECTURE: PanopticFPN
  PANOPTIC_FPN:
    COMBINE:
      ENABLED: True
      INSTANCES_CONFIDENCE_THRESH: 0.5
      OVERLAP_THRESH: 0.5
      STUFF_AREA_LIMIT: 4096
    INSTANCE_LOSS_WEIGHT: 1.0
  PIXEL_MEAN: [103.53, 116.28, 123.675]
  PIXEL_STD: [1.0, 1.0, 1.0]
  PROPOSAL_GENERATOR:
    MIN_SIZE: 0
    NAME: RPN
  RESNETS:
    DEFORM_MODULATED: False
    DEFORM_NUM_GROUPS: 1
    DEFORM_ON_PER_STAGE: [False, False, False, False]
    DEPTH: 50
    NORM: FrozenBN
    NUM_GROUPS: 1
    OUT_FEATURES: ['res2', 'res3', 'res4', 'res5']
    RES2_OUT_CHANNELS: 256
    RES5_DILATION: 1
    STEM_OUT_CHANNELS: 64
    STRIDE_IN_1X1: True
    WIDTH_PER_GROUP: 64
  RETINANET:
    BBOX_REG_LOSS_TYPE: smooth_l1
    BBOX_REG_WEIGHTS: (1.0, 1.0, 1.0, 1.0)
    FOCAL_LOSS_ALPHA: 0.25
    FOCAL_LOSS_GAMMA: 2.0
    IN_FEATURES: ['p3', 'p4', 'p5', 'p6', 'p7']
    IOU_LABELS: [0, -1, 1]
    IOU_THRESHOLDS: [0.4, 0.5]
    NMS_THRESH_TEST: 0.5
    NORM: 
    NUM_CLASSES: 80
    NUM_CONVS: 4
    PRIOR_PROB: 0.01
    SCORE_THRESH_TEST: 0.05
    SMOOTH_L1_LOSS_BETA: 0.1
    TOPK_CANDIDATES_TEST: 1000
  ROI_BOX_CASCADE_HEAD:
    BBOX_REG_WEIGHTS: ((10.0, 10.0, 5.0, 5.0), (20.0, 20.0, 10.0, 10.0), (30.0, 30.0, 15.0, 15.0))
    IOUS: (0.5, 0.6, 0.7)
  ROI_BOX_HEAD:
    BBOX_REG_LOSS_TYPE: smooth_l1
    BBOX_REG_LOSS_WEIGHT: 1.0
    BBOX_REG_WEIGHTS: (10.0, 10.0, 5.0, 5.0)
    CLS_AGNOSTIC_BBOX_REG: False
    CONV_DIM: 256
    FC_DIM: 1024
    NAME: FastRCNNConvFCHead
    NORM: 
    NUM_CONV: 0
    NUM_FC: 2
    POOLER_RESOLUTION: 7
    POOLER_SAMPLING_RATIO: 0
    POOLER_TYPE: ROIAlignV2
    SMOOTH_L1_BETA: 0.0
    TRAIN_ON_PRED_BOXES: False
  ROI_HEADS:
    BATCH_SIZE_PER_IMAGE: 512
    IN_FEATURES: ['p2', 'p3', 'p4', 'p5']
    IOU_LABELS: [0, 1]
    IOU_THRESHOLDS: [0.5]
    NAME: StandardROIHeads
    NMS_THRESH_TEST: 0.5
    NUM_CLASSES: 80
    POSITIVE_FRACTION: 0.25
    PROPOSAL_APPEND_GT: True
    SCORE_THRESH_TEST: 0.05
  ROI_KEYPOINT_HEAD:
    CONV_DIMS: (512, 512, 512, 512, 512, 512, 512, 512)
    LOSS_WEIGHT: 1.0
    MIN_KEYPOINTS_PER_IMAGE: 1
    NAME: KRCNNConvDeconvUpsampleHead
    NORMALIZE_LOSS_BY_VISIBLE_KEYPOINTS: True
    NUM_KEYPOINTS: 17
    POOLER_RESOLUTION: 14
    POOLER_SAMPLING_RATIO: 0
    POOLER_TYPE: ROIAlignV2
  ROI_MASK_HEAD:
    CLS_AGNOSTIC_MASK: False
    CONV_DIM: 256
    NAME: MaskRCNNConvUpsampleHead
    NORM: 
    NUM_CONV: 4
    POOLER_RESOLUTION: 14
    POOLER_SAMPLING_RATIO: 0
    POOLER_TYPE: ROIAlignV2
  RPN:
    BATCH_SIZE_PER_IMAGE: 256
    BBOX_REG_LOSS_TYPE: smooth_l1
    BBOX_REG_LOSS_WEIGHT: 1.0
    BBOX_REG_WEIGHTS: (1.0, 1.0, 1.0, 1.0)
    BOUNDARY_THRESH: -1
    HEAD_NAME: StandardRPNHead
    IN_FEATURES: ['p2', 'p3', 'p4', 'p5', 'p6']
    IOU_LABELS: [0, -1, 1]
    IOU_THRESHOLDS: [0.3, 0.7]
    LOSS_WEIGHT: 1.0
    NMS_THRESH: 0.7
    POSITIVE_FRACTION: 0.5
    POST_NMS_TOPK_TEST: 1000
    POST_NMS_TOPK_TRAIN: 1000
    PRE_NMS_TOPK_TEST: 1000
    PRE_NMS_TOPK_TRAIN: 2000
    SMOOTH_L1_BETA: 0.0
  SEM_SEG_HEAD:
    COMMON_STRIDE: 4
    CONVS_DIM: 128
    IGNORE_VALUE: 255
    IN_FEATURES: ['p2', 'p3', 'p4', 'p5']
    LOSS_WEIGHT: 0.5
    NAME: SemSegPyConvHeadV1
    NORM: GN
    NUM_CLASSES: 54
    PYCONV_CLS_DROPOUT: 0.1
    PYCONV_FUSE_MODE: SUM
    PYCONV_GLOBAL_BINS: 9
    PYCONV_LOCAL_REDUCTION: 4
    PYCONV_MERGE_OUT_SIZE: 128
    PYCONV_OUT_SIZE_GLOBAL_CONTEXT: 128
    PYCONV_OUT_SIZE_LOCAL_CONTEXT: 128
  WEIGHTS: detectron2://ImageNetPretrained/MSRA/R-50.pkl
OUTPUT_DIR: ./output_pan_pyconv_v1head_r50_3x_gpus2_batch4_LR0x005_Dec17_9h
SEED: -1
SOLVER:
  BASE_LR: 0.005
  BIAS_LR_FACTOR: 1.0
  CHECKPOINT_PERIOD: 5000
  CLIP_GRADIENTS:
    CLIP_TYPE: value
    CLIP_VALUE: 1.0
    ENABLED: False
    NORM_TYPE: 2.0
  GAMMA: 0.1
  IMS_PER_BATCH: 4
  LR_SCHEDULER_NAME: WarmupMultiStepLR
  MAX_ITER: 270000
  MOMENTUM: 0.9
  NESTEROV: False
  REFERENCE_WORLD_SIZE: 0
  STEPS: (210000, 250000)
  WARMUP_FACTOR: 0.001
  WARMUP_ITERS: 1000
  WARMUP_METHOD: linear
  WEIGHT_DECAY: 0.0001
  WEIGHT_DECAY_BIAS: 0.0001
  WEIGHT_DECAY_NORM: 0.0
TEST:
  AUG:
    ENABLED: False
    FLIP: True
    MAX_SIZE: 4000
    MIN_SIZES: (400, 500, 600, 700, 800, 900, 1000, 1100, 1200)
  DETECTIONS_PER_IMAGE: 100
  EVAL_PERIOD: 0
  EXPECTED_RESULTS: []
  KEYPOINT_OKS_SIGMAS: []
  PRECISE_BN:
    ENABLED: False
    NUM_ITER: 200
VERSION: 2
VIS_PERIOD: 0
[12/17 08:50:24] detectron2.utils.env INFO: Using a generated random seed 24840137
[12/17 08:50:25] detectron2.engine.defaults INFO: Model:
PanopticFPN(
  (backbone): FPN(
    (fpn_lateral2): Conv2d(256, 256, kernel_size=(1, 1), stride=(1, 1))
    (fpn_output2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (fpn_lateral3): Conv2d(512, 256, kernel_size=(1, 1), stride=(1, 1))
    (fpn_output3): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (fpn_lateral4): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1))
    (fpn_output4): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (fpn_lateral5): Conv2d(2048, 256, kernel_size=(1, 1), stride=(1, 1))
    (fpn_output5): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (top_block): LastLevelMaxPool()
    (bottom_up): ResNet(
      (stem): BasicStem(
        (conv1): Conv2d(
          3, 64, kernel_size=(7, 7), stride=(2, 2), padding=(3, 3), bias=False
          (norm): FrozenBatchNorm2d(num_features=64, eps=1e-05)
        )
      )
      (res2): Sequential(
        (0): BottleneckBlock(
          (shortcut): Conv2d(
            64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv1): Conv2d(
            64, 64, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=64, eps=1e-05)
          )
          (conv2): Conv2d(
            64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=64, eps=1e-05)
          )
          (conv3): Conv2d(
            64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
        )
        (1): BottleneckBlock(
          (conv1): Conv2d(
            256, 64, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=64, eps=1e-05)
          )
          (conv2): Conv2d(
            64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=64, eps=1e-05)
          )
          (conv3): Conv2d(
            64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
        )
        (2): BottleneckBlock(
          (conv1): Conv2d(
            256, 64, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=64, eps=1e-05)
          )
          (conv2): Conv2d(
            64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=64, eps=1e-05)
          )
          (conv3): Conv2d(
            64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
        )
      )
      (res3): Sequential(
        (0): BottleneckBlock(
          (shortcut): Conv2d(
            256, 512, kernel_size=(1, 1), stride=(2, 2), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
          (conv1): Conv2d(
            256, 128, kernel_size=(1, 1), stride=(2, 2), bias=False
            (norm): FrozenBatchNorm2d(num_features=128, eps=1e-05)
          )
          (conv2): Conv2d(
            128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=128, eps=1e-05)
          )
          (conv3): Conv2d(
            128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
        )
        (1): BottleneckBlock(
          (conv1): Conv2d(
            512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=128, eps=1e-05)
          )
          (conv2): Conv2d(
            128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=128, eps=1e-05)
          )
          (conv3): Conv2d(
            128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
        )
        (2): BottleneckBlock(
          (conv1): Conv2d(
            512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=128, eps=1e-05)
          )
          (conv2): Conv2d(
            128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=128, eps=1e-05)
          )
          (conv3): Conv2d(
            128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
        )
        (3): BottleneckBlock(
          (conv1): Conv2d(
            512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=128, eps=1e-05)
          )
          (conv2): Conv2d(
            128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=128, eps=1e-05)
          )
          (conv3): Conv2d(
            128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
        )
      )
      (res4): Sequential(
        (0): BottleneckBlock(
          (shortcut): Conv2d(
            512, 1024, kernel_size=(1, 1), stride=(2, 2), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
          (conv1): Conv2d(
            512, 256, kernel_size=(1, 1), stride=(2, 2), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv2): Conv2d(
            256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (1): BottleneckBlock(
          (conv1): Conv2d(
            1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv2): Conv2d(
            256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (2): BottleneckBlock(
          (conv1): Conv2d(
            1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv2): Conv2d(
            256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (3): BottleneckBlock(
          (conv1): Conv2d(
            1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv2): Conv2d(
            256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (4): BottleneckBlock(
          (conv1): Conv2d(
            1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv2): Conv2d(
            256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (5): BottleneckBlock(
          (conv1): Conv2d(
            1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv2): Conv2d(
            256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
      )
      (res5): Sequential(
        (0): BottleneckBlock(
          (shortcut): Conv2d(
            1024, 2048, kernel_size=(1, 1), stride=(2, 2), bias=False
            (norm): FrozenBatchNorm2d(num_features=2048, eps=1e-05)
          )
          (conv1): Conv2d(
            1024, 512, kernel_size=(1, 1), stride=(2, 2), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
          (conv2): Conv2d(
            512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
          (conv3): Conv2d(
            512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=2048, eps=1e-05)
          )
        )
        (1): BottleneckBlock(
          (conv1): Conv2d(
            2048, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
          (conv2): Conv2d(
            512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
          (conv3): Conv2d(
            512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=2048, eps=1e-05)
          )
        )
        (2): BottleneckBlock(
          (conv1): Conv2d(
            2048, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
          (conv2): Conv2d(
            512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
          (conv3): Conv2d(
            512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=2048, eps=1e-05)
          )
        )
      )
    )
  )
  (proposal_generator): RPN(
    (rpn_head): StandardRPNHead(
      (conv): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      (objectness_logits): Conv2d(256, 3, kernel_size=(1, 1), stride=(1, 1))
      (anchor_deltas): Conv2d(256, 12, kernel_size=(1, 1), stride=(1, 1))
    )
    (anchor_generator): DefaultAnchorGenerator(
      (cell_anchors): BufferList()
    )
  )
  (roi_heads): StandardROIHeads(
    (box_pooler): ROIPooler(
      (level_poolers): ModuleList(
        (0): ROIAlign(output_size=(7, 7), spatial_scale=0.25, sampling_ratio=0, aligned=True)
        (1): ROIAlign(output_size=(7, 7), spatial_scale=0.125, sampling_ratio=0, aligned=True)
        (2): ROIAlign(output_size=(7, 7), spatial_scale=0.0625, sampling_ratio=0, aligned=True)
        (3): ROIAlign(output_size=(7, 7), spatial_scale=0.03125, sampling_ratio=0, aligned=True)
      )
    )
    (box_head): FastRCNNConvFCHead(
      (flatten): Flatten()
      (fc1): Linear(in_features=12544, out_features=1024, bias=True)
      (fc_relu1): ReLU()
      (fc2): Linear(in_features=1024, out_features=1024, bias=True)
      (fc_relu2): ReLU()
    )
    (box_predictor): FastRCNNOutputLayers(
      (cls_score): Linear(in_features=1024, out_features=81, bias=True)
      (bbox_pred): Linear(in_features=1024, out_features=320, bias=True)
    )
    (mask_pooler): ROIPooler(
      (level_poolers): ModuleList(
        (0): ROIAlign(output_size=(14, 14), spatial_scale=0.25, sampling_ratio=0, aligned=True)
        (1): ROIAlign(output_size=(14, 14), spatial_scale=0.125, sampling_ratio=0, aligned=True)
        (2): ROIAlign(output_size=(14, 14), spatial_scale=0.0625, sampling_ratio=0, aligned=True)
        (3): ROIAlign(output_size=(14, 14), spatial_scale=0.03125, sampling_ratio=0, aligned=True)
      )
    )
    (mask_head): MaskRCNNConvUpsampleHead(
      (mask_fcn1): Conv2d(
        256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1)
        (activation): ReLU()
      )
      (mask_fcn2): Conv2d(
        256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1)
        (activation): ReLU()
      )
      (mask_fcn3): Conv2d(
        256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1)
        (activation): ReLU()
      )
      (mask_fcn4): Conv2d(
        256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1)
        (activation): ReLU()
      )
      (deconv): ConvTranspose2d(256, 256, kernel_size=(2, 2), stride=(2, 2))
      (deconv_relu): ReLU()
      (predictor): Conv2d(256, 80, kernel_size=(1, 1), stride=(1, 1))
    )
  )
  (sem_seg_head): SemSegPyConvHeadV1(
    (p2): Sequential(
      (0): Sequential(
        (0): PyConv4(
          (conv2_1): Conv2d(256, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (conv2_2): Conv2d(256, 32, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2), groups=4, bias=False)
          (conv2_3): Conv2d(256, 32, kernel_size=(7, 7), stride=(1, 1), padding=(3, 3), groups=8, bias=False)
          (conv2_4): Conv2d(256, 32, kernel_size=(9, 9), stride=(1, 1), padding=(4, 4), groups=16, bias=False)
        )
        (1): GroupNorm(32, 128, eps=1e-05, affine=True)
        (2): ReLU()
      )
    )
    (p3): Sequential(
      (0): Sequential(
        (0): PyConv4(
          (conv2_1): Conv2d(256, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (conv2_2): Conv2d(256, 32, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2), groups=4, bias=False)
          (conv2_3): Conv2d(256, 32, kernel_size=(7, 7), stride=(1, 1), padding=(3, 3), groups=8, bias=False)
          (conv2_4): Conv2d(256, 32, kernel_size=(9, 9), stride=(1, 1), padding=(4, 4), groups=16, bias=False)
        )
        (1): GroupNorm(32, 128, eps=1e-05, affine=True)
        (2): ReLU()
        (3): Upsample(scale_factor=2.0, mode=bilinear)
      )
    )
    (p4): Sequential(
      (0): Sequential(
        (0): PyConv3(
          (conv2_1): Conv2d(256, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (conv2_2): Conv2d(256, 32, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2), groups=4, bias=False)
          (conv2_3): Conv2d(256, 64, kernel_size=(7, 7), stride=(1, 1), padding=(3, 3), groups=8, bias=False)
        )
        (1): GroupNorm(32, 128, eps=1e-05, affine=True)
        (2): ReLU()
        (3): Upsample(scale_factor=2.0, mode=bilinear)
      )
      (1): Sequential(
        (0): PyConv4(
          (conv2_1): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (conv2_2): Conv2d(128, 32, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2), groups=4, bias=False)
          (conv2_3): Conv2d(128, 32, kernel_size=(7, 7), stride=(1, 1), padding=(3, 3), groups=8, bias=False)
          (conv2_4): Conv2d(128, 32, kernel_size=(9, 9), stride=(1, 1), padding=(4, 4), groups=16, bias=False)
        )
        (1): GroupNorm(32, 128, eps=1e-05, affine=True)
        (2): ReLU()
        (3): Upsample(scale_factor=2.0, mode=bilinear)
      )
    )
    (p5): Sequential(
      (0): Sequential(
        (0): PyConv2(
          (conv2_1): Conv2d(256, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (conv2_2): Conv2d(256, 64, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2), groups=4, bias=False)
        )
        (1): GroupNorm(32, 128, eps=1e-05, affine=True)
        (2): ReLU()
        (3): Upsample(scale_factor=2.0, mode=bilinear)
      )
      (1): Sequential(
        (0): PyConv3(
          (conv2_1): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (conv2_2): Conv2d(128, 32, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2), groups=4, bias=False)
          (conv2_3): Conv2d(128, 64, kernel_size=(7, 7), stride=(1, 1), padding=(3, 3), groups=8, bias=False)
        )
        (1): GroupNorm(32, 128, eps=1e-05, affine=True)
        (2): ReLU()
        (3): Upsample(scale_factor=2.0, mode=bilinear)
      )
      (2): Sequential(
        (0): PyConv4(
          (conv2_1): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (conv2_2): Conv2d(128, 32, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2), groups=4, bias=False)
          (conv2_3): Conv2d(128, 32, kernel_size=(7, 7), stride=(1, 1), padding=(3, 3), groups=8, bias=False)
          (conv2_4): Conv2d(128, 32, kernel_size=(9, 9), stride=(1, 1), padding=(4, 4), groups=16, bias=False)
        )
        (1): GroupNorm(32, 128, eps=1e-05, affine=True)
        (2): ReLU()
        (3): Upsample(scale_factor=2.0, mode=bilinear)
      )
    )
    (predictor): Conv2d(128, 54, kernel_size=(1, 1), stride=(1, 1))
  )
)
[12/17 08:50:48] detectron2.data.datasets.coco INFO: Loading /cvhci/temp/wmao/detectron2_datasets/coco/annotations/instances_train2017.json takes 22.34 seconds.
[12/17 08:50:49] detectron2.data.datasets.coco INFO: Loaded 118287 images in COCO format from /cvhci/temp/wmao/detectron2_datasets/coco/annotations/instances_train2017.json
[12/17 08:51:02] detectron2.data.datasets.coco INFO: Loaded 118287 images with semantic segmentation from /cvhci/temp/wmao/detectron2_datasets/coco/train2017
[12/17 08:51:11] detectron2.data.build INFO: Distribution of instances among all 80 categories:
[36m|   category    | #instances   |   category   | #instances   |   category    | #instances   |
|:-------------:|:-------------|:------------:|:-------------|:-------------:|:-------------|
|    person     | 257253       |   bicycle    | 7056         |      car      | 43533        |
|  motorcycle   | 8654         |   airplane   | 5129         |      bus      | 6061         |
|     train     | 4570         |    truck     | 9970         |     boat      | 10576        |
| traffic light | 12842        | fire hydrant | 1865         |   stop sign   | 1983         |
| parking meter | 1283         |    bench     | 9820         |     bird      | 10542        |
|      cat      | 4766         |     dog      | 5500         |     horse     | 6567         |
|     sheep     | 9223         |     cow      | 8014         |   elephant    | 5484         |
|     bear      | 1294         |    zebra     | 5269         |    giraffe    | 5128         |
|   backpack    | 8714         |   umbrella   | 11265        |    handbag    | 12342        |
|      tie      | 6448         |   suitcase   | 6112         |    frisbee    | 2681         |
|     skis      | 6623         |  snowboard   | 2681         |  sports ball  | 6299         |
|     kite      | 8802         | baseball bat | 3273         | baseball gl.. | 3747         |
|  skateboard   | 5536         |  surfboard   | 6095         | tennis racket | 4807         |
|    bottle     | 24070        |  wine glass  | 7839         |      cup      | 20574        |
|     fork      | 5474         |    knife     | 7760         |     spoon     | 6159         |
|     bowl      | 14323        |    banana    | 9195         |     apple     | 5776         |
|   sandwich    | 4356         |    orange    | 6302         |   broccoli    | 7261         |
|    carrot     | 7758         |   hot dog    | 2884         |     pizza     | 5807         |
|     donut     | 7005         |     cake     | 6296         |     chair     | 38073        |
|     couch     | 5779         | potted plant | 8631         |      bed      | 4192         |
| dining table  | 15695        |    toilet    | 4149         |      tv       | 5803         |
|    laptop     | 4960         |    mouse     | 2261         |    remote     | 5700         |
|   keyboard    | 2854         |  cell phone  | 6422         |   microwave   | 1672         |
|     oven      | 3334         |   toaster    | 225          |     sink      | 5609         |
| refrigerator  | 2634         |     book     | 24077        |     clock     | 6320         |
|     vase      | 6577         |   scissors   | 1464         |  teddy bear   | 4729         |
|  hair drier   | 198          |  toothbrush  | 1945         |               |              |
|     total     | 849949       |              |              |               |              |[0m
[12/17 08:51:11] detectron2.data.common INFO: Serializing 118287 elements to byte tensors and concatenating them all ...
[12/17 08:51:16] detectron2.data.common INFO: Serialized dataset takes 466.45 MiB
[12/17 08:51:16] detectron2.data.dataset_mapper INFO: Augmentations used in training: [ResizeShortestEdge(short_edge_length=(640, 672, 704, 736, 768, 800), max_size=1333, sample_style='choice'), RandomFlip()]
[12/17 08:51:16] detectron2.data.build INFO: Using training sampler TrainingSampler
[12/17 08:52:15] detectron2 INFO: Rank of current process: 1. World size: 2
[12/17 08:52:15] detectron2 INFO: Environment info:
----------------------  ---------------------------------------------------------------------------------------------------------------
sys.platform            linux
Python                  3.7.9 (default, Aug 31 2020, 12:42:55) [GCC 7.3.0]
numpy                   1.19.1
detectron2              0.2.1 @/home/wmao/code/detectron2_PFPN/detectron2/detectron2
Compiler                GCC 7.5
CUDA compiler           CUDA 10.0
detectron2 arch flags   /home/wmao/code/detectron2_PFPN/detectron2/detectron2/_C.cpython-37m-x86_64-linux-gnu.so; cannot find cuobjdump
DETECTRON2_ENV_MODULE   <not set>
PyTorch                 1.4.0 @/home/wmao/anaconda3/envs/detectron2_FPN/lib/python3.7/site-packages/torch
PyTorch debug build     False
GPU available           True
GPU 0,1                 GeForce GTX 1080 Ti (arch=6.1)
CUDA_HOME               /usr/local/cuda-10.0 - invalid!
Pillow                  7.2.0
torchvision             0.5.0 @/home/wmao/anaconda3/envs/detectron2_FPN/lib/python3.7/site-packages/torchvision
torchvision arch flags  /home/wmao/anaconda3/envs/detectron2_FPN/lib/python3.7/site-packages/torchvision/_C.so; cannot find cuobjdump
fvcore                  0.1.2.post20200929
cv2                     3.4.2
----------------------  ---------------------------------------------------------------------------------------------------------------
PyTorch built with:
  - GCC 7.3
  - Intel(R) Math Kernel Library Version 2020.0.2 Product Build 20200624 for Intel(R) 64 architecture applications
  - Intel(R) MKL-DNN v0.21.1 (Git Hash 7d2fd500bc78936d1d648ca713b901012f470dbc)
  - OpenMP 201511 (a.k.a. OpenMP 4.5)
  - NNPACK is enabled
  - CUDA Runtime 10.0
  - NVCC architecture flags: -gencode;arch=compute_37,code=sm_37;-gencode;arch=compute_50,code=sm_50;-gencode;arch=compute_60,code=sm_60;-gencode;arch=compute_61,code=sm_61;-gencode;arch=compute_70,code=sm_70;-gencode;arch=compute_75,code=sm_75;-gencode;arch=compute_37,code=compute_37
  - CuDNN 7.6.3
  - Magma 2.5.1
  - Build settings: BLAS=MKL, BUILD_NAMEDTENSOR=OFF, BUILD_TYPE=Release, CXX_FLAGS= -Wno-deprecated -fvisibility-inlines-hidden -fopenmp -DUSE_FBGEMM -DUSE_QNNPACK -DUSE_PYTORCH_QNNPACK -O2 -fPIC -Wno-narrowing -Wall -Wextra -Wno-missing-field-initializers -Wno-type-limits -Wno-array-bounds -Wno-unknown-pragmas -Wno-sign-compare -Wno-unused-parameter -Wno-unused-variable -Wno-unused-function -Wno-unused-result -Wno-strict-overflow -Wno-strict-aliasing -Wno-error=deprecated-declarations -Wno-stringop-overflow -Wno-error=pedantic -Wno-error=redundant-decls -Wno-error=old-style-cast -fdiagnostics-color=always -faligned-new -Wno-unused-but-set-variable -Wno-maybe-uninitialized -fno-math-errno -fno-trapping-math -Wno-stringop-overflow, DISABLE_NUMA=1, PERF_WITH_AVX=1, PERF_WITH_AVX2=1, PERF_WITH_AVX512=1, USE_CUDA=ON, USE_EXCEPTION_PTR=1, USE_GFLAGS=OFF, USE_GLOG=OFF, USE_MKL=ON, USE_MKLDNN=ON, USE_MPI=OFF, USE_NCCL=ON, USE_NNPACK=ON, USE_OPENMP=ON, USE_STATIC_DISPATCH=OFF, 

[12/17 08:52:15] detectron2 INFO: Command line arguments: Namespace(config_file='./configs/COCO/panoptic_fpn_pyconv_v1_R_50_3x.yaml', dist_url='tcp://127.0.0.1:61373', eval_only=False, machine_rank=0, num_gpus=2, num_machines=1, opts=['SOLVER.IMS_PER_BATCH', '4', 'SOLVER.BASE_LR', '0.005', 'OUTPUT_DIR', './output_pan_pyconv_v1head_r50_3x_gpus2_batch4_LR0x005_Dec17_9h'], resume=False)
[12/17 08:52:15] detectron2 INFO: Contents of args.config_file=./configs/COCO/panoptic_fpn_pyconv_v1_R_50_3x.yaml:
_BASE_: "Base-Panoptic-PyConv.yaml"
MODEL:
  SEM_SEG_HEAD:
    NAME: "SemSegPyConvHeadV1"
  WEIGHTS: "detectron2://ImageNetPretrained/MSRA/R-50.pkl"
  RESNETS:
    DEPTH: 50
SOLVER:
  STEPS: (210000, 250000)
  MAX_ITER: 270000
OUTPUT_DIR: "./output_panoptic_fpn_pyconv_v1_r50_3x"

[12/17 08:52:15] detectron2 INFO: Running with full config:
CUDNN_BENCHMARK: False
DATALOADER:
  ASPECT_RATIO_GROUPING: True
  FILTER_EMPTY_ANNOTATIONS: False
  NUM_WORKERS: 4
  REPEAT_THRESHOLD: 0.0
  SAMPLER_TRAIN: TrainingSampler
DATASETS:
  PRECOMPUTED_PROPOSAL_TOPK_TEST: 1000
  PRECOMPUTED_PROPOSAL_TOPK_TRAIN: 2000
  PROPOSAL_FILES_TEST: ()
  PROPOSAL_FILES_TRAIN: ()
  TEST: ('coco_2017_val_panoptic_separated',)
  TRAIN: ('coco_2017_train_panoptic_separated',)
GLOBAL:
  HACK: 1.0
INPUT:
  CROP:
    ENABLED: False
    SIZE: [0.9, 0.9]
    TYPE: relative_range
  FORMAT: BGR
  MASK_FORMAT: polygon
  MAX_SIZE_TEST: 1333
  MAX_SIZE_TRAIN: 1333
  MIN_SIZE_TEST: 800
  MIN_SIZE_TRAIN: (640, 672, 704, 736, 768, 800)
  MIN_SIZE_TRAIN_SAMPLING: choice
  RANDOM_FLIP: horizontal
MODEL:
  ANCHOR_GENERATOR:
    ANGLES: [[-90, 0, 90]]
    ASPECT_RATIOS: [[0.5, 1.0, 2.0]]
    NAME: DefaultAnchorGenerator
    OFFSET: 0.0
    SIZES: [[32], [64], [128], [256], [512]]
  BACKBONE:
    FREEZE_AT: 2
    NAME: build_resnet_fpn_backbone
  DEVICE: cuda
  FPN:
    FUSE_TYPE: sum
    IN_FEATURES: ['res2', 'res3', 'res4', 'res5']
    NORM: 
    OUT_CHANNELS: 256
  KEYPOINT_ON: False
  LOAD_PROPOSALS: False
  MASK_ON: True
  META_ARCHITECTURE: PanopticFPN
  PANOPTIC_FPN:
    COMBINE:
      ENABLED: True
      INSTANCES_CONFIDENCE_THRESH: 0.5
      OVERLAP_THRESH: 0.5
      STUFF_AREA_LIMIT: 4096
    INSTANCE_LOSS_WEIGHT: 1.0
  PIXEL_MEAN: [103.53, 116.28, 123.675]
  PIXEL_STD: [1.0, 1.0, 1.0]
  PROPOSAL_GENERATOR:
    MIN_SIZE: 0
    NAME: RPN
  RESNETS:
    DEFORM_MODULATED: False
    DEFORM_NUM_GROUPS: 1
    DEFORM_ON_PER_STAGE: [False, False, False, False]
    DEPTH: 50
    NORM: FrozenBN
    NUM_GROUPS: 1
    OUT_FEATURES: ['res2', 'res3', 'res4', 'res5']
    RES2_OUT_CHANNELS: 256
    RES5_DILATION: 1
    STEM_OUT_CHANNELS: 64
    STRIDE_IN_1X1: True
    WIDTH_PER_GROUP: 64
  RETINANET:
    BBOX_REG_LOSS_TYPE: smooth_l1
    BBOX_REG_WEIGHTS: (1.0, 1.0, 1.0, 1.0)
    FOCAL_LOSS_ALPHA: 0.25
    FOCAL_LOSS_GAMMA: 2.0
    IN_FEATURES: ['p3', 'p4', 'p5', 'p6', 'p7']
    IOU_LABELS: [0, -1, 1]
    IOU_THRESHOLDS: [0.4, 0.5]
    NMS_THRESH_TEST: 0.5
    NORM: 
    NUM_CLASSES: 80
    NUM_CONVS: 4
    PRIOR_PROB: 0.01
    SCORE_THRESH_TEST: 0.05
    SMOOTH_L1_LOSS_BETA: 0.1
    TOPK_CANDIDATES_TEST: 1000
  ROI_BOX_CASCADE_HEAD:
    BBOX_REG_WEIGHTS: ((10.0, 10.0, 5.0, 5.0), (20.0, 20.0, 10.0, 10.0), (30.0, 30.0, 15.0, 15.0))
    IOUS: (0.5, 0.6, 0.7)
  ROI_BOX_HEAD:
    BBOX_REG_LOSS_TYPE: smooth_l1
    BBOX_REG_LOSS_WEIGHT: 1.0
    BBOX_REG_WEIGHTS: (10.0, 10.0, 5.0, 5.0)
    CLS_AGNOSTIC_BBOX_REG: False
    CONV_DIM: 256
    FC_DIM: 1024
    NAME: FastRCNNConvFCHead
    NORM: 
    NUM_CONV: 0
    NUM_FC: 2
    POOLER_RESOLUTION: 7
    POOLER_SAMPLING_RATIO: 0
    POOLER_TYPE: ROIAlignV2
    SMOOTH_L1_BETA: 0.0
    TRAIN_ON_PRED_BOXES: False
  ROI_HEADS:
    BATCH_SIZE_PER_IMAGE: 512
    IN_FEATURES: ['p2', 'p3', 'p4', 'p5']
    IOU_LABELS: [0, 1]
    IOU_THRESHOLDS: [0.5]
    NAME: StandardROIHeads
    NMS_THRESH_TEST: 0.5
    NUM_CLASSES: 80
    POSITIVE_FRACTION: 0.25
    PROPOSAL_APPEND_GT: True
    SCORE_THRESH_TEST: 0.05
  ROI_KEYPOINT_HEAD:
    CONV_DIMS: (512, 512, 512, 512, 512, 512, 512, 512)
    LOSS_WEIGHT: 1.0
    MIN_KEYPOINTS_PER_IMAGE: 1
    NAME: KRCNNConvDeconvUpsampleHead
    NORMALIZE_LOSS_BY_VISIBLE_KEYPOINTS: True
    NUM_KEYPOINTS: 17
    POOLER_RESOLUTION: 14
    POOLER_SAMPLING_RATIO: 0
    POOLER_TYPE: ROIAlignV2
  ROI_MASK_HEAD:
    CLS_AGNOSTIC_MASK: False
    CONV_DIM: 256
    NAME: MaskRCNNConvUpsampleHead
    NORM: 
    NUM_CONV: 4
    POOLER_RESOLUTION: 14
    POOLER_SAMPLING_RATIO: 0
    POOLER_TYPE: ROIAlignV2
  RPN:
    BATCH_SIZE_PER_IMAGE: 256
    BBOX_REG_LOSS_TYPE: smooth_l1
    BBOX_REG_LOSS_WEIGHT: 1.0
    BBOX_REG_WEIGHTS: (1.0, 1.0, 1.0, 1.0)
    BOUNDARY_THRESH: -1
    HEAD_NAME: StandardRPNHead
    IN_FEATURES: ['p2', 'p3', 'p4', 'p5', 'p6']
    IOU_LABELS: [0, -1, 1]
    IOU_THRESHOLDS: [0.3, 0.7]
    LOSS_WEIGHT: 1.0
    NMS_THRESH: 0.7
    POSITIVE_FRACTION: 0.5
    POST_NMS_TOPK_TEST: 1000
    POST_NMS_TOPK_TRAIN: 1000
    PRE_NMS_TOPK_TEST: 1000
    PRE_NMS_TOPK_TRAIN: 2000
    SMOOTH_L1_BETA: 0.0
  SEM_SEG_HEAD:
    COMMON_STRIDE: 4
    CONVS_DIM: 128
    IGNORE_VALUE: 255
    IN_FEATURES: ['p2', 'p3', 'p4', 'p5']
    LOSS_WEIGHT: 0.5
    NAME: SemSegPyConvHeadV1
    NORM: GN
    NUM_CLASSES: 54
    PYCONV_CLS_DROPOUT: 0.1
    PYCONV_FUSE_MODE: SUM
    PYCONV_GLOBAL_BINS: 9
    PYCONV_LOCAL_REDUCTION: 4
    PYCONV_MERGE_OUT_SIZE: 128
    PYCONV_OUT_SIZE_GLOBAL_CONTEXT: 128
    PYCONV_OUT_SIZE_LOCAL_CONTEXT: 128
  WEIGHTS: detectron2://ImageNetPretrained/MSRA/R-50.pkl
OUTPUT_DIR: ./output_pan_pyconv_v1head_r50_3x_gpus2_batch4_LR0x005_Dec17_9h
SEED: -1
SOLVER:
  BASE_LR: 0.005
  BIAS_LR_FACTOR: 1.0
  CHECKPOINT_PERIOD: 5000
  CLIP_GRADIENTS:
    CLIP_TYPE: value
    CLIP_VALUE: 1.0
    ENABLED: False
    NORM_TYPE: 2.0
  GAMMA: 0.1
  IMS_PER_BATCH: 4
  LR_SCHEDULER_NAME: WarmupMultiStepLR
  MAX_ITER: 270000
  MOMENTUM: 0.9
  NESTEROV: False
  REFERENCE_WORLD_SIZE: 0
  STEPS: (210000, 250000)
  WARMUP_FACTOR: 0.001
  WARMUP_ITERS: 1000
  WARMUP_METHOD: linear
  WEIGHT_DECAY: 0.0001
  WEIGHT_DECAY_BIAS: 0.0001
  WEIGHT_DECAY_NORM: 0.0
TEST:
  AUG:
    ENABLED: False
    FLIP: True
    MAX_SIZE: 4000
    MIN_SIZES: (400, 500, 600, 700, 800, 900, 1000, 1100, 1200)
  DETECTIONS_PER_IMAGE: 100
  EVAL_PERIOD: 0
  EXPECTED_RESULTS: []
  KEYPOINT_OKS_SIGMAS: []
  PRECISE_BN:
    ENABLED: False
    NUM_ITER: 200
VERSION: 2
VIS_PERIOD: 0
[12/17 08:52:15] detectron2.utils.env INFO: Using a generated random seed 16045323
[12/17 08:52:16] detectron2.engine.defaults INFO: Model:
PanopticFPN(
  (backbone): FPN(
    (fpn_lateral2): Conv2d(256, 256, kernel_size=(1, 1), stride=(1, 1))
    (fpn_output2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (fpn_lateral3): Conv2d(512, 256, kernel_size=(1, 1), stride=(1, 1))
    (fpn_output3): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (fpn_lateral4): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1))
    (fpn_output4): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (fpn_lateral5): Conv2d(2048, 256, kernel_size=(1, 1), stride=(1, 1))
    (fpn_output5): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (top_block): LastLevelMaxPool()
    (bottom_up): ResNet(
      (stem): BasicStem(
        (conv1): Conv2d(
          3, 64, kernel_size=(7, 7), stride=(2, 2), padding=(3, 3), bias=False
          (norm): FrozenBatchNorm2d(num_features=64, eps=1e-05)
        )
      )
      (res2): Sequential(
        (0): BottleneckBlock(
          (shortcut): Conv2d(
            64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv1): Conv2d(
            64, 64, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=64, eps=1e-05)
          )
          (conv2): Conv2d(
            64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=64, eps=1e-05)
          )
          (conv3): Conv2d(
            64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
        )
        (1): BottleneckBlock(
          (conv1): Conv2d(
            256, 64, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=64, eps=1e-05)
          )
          (conv2): Conv2d(
            64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=64, eps=1e-05)
          )
          (conv3): Conv2d(
            64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
        )
        (2): BottleneckBlock(
          (conv1): Conv2d(
            256, 64, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=64, eps=1e-05)
          )
          (conv2): Conv2d(
            64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=64, eps=1e-05)
          )
          (conv3): Conv2d(
            64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
        )
      )
      (res3): Sequential(
        (0): BottleneckBlock(
          (shortcut): Conv2d(
            256, 512, kernel_size=(1, 1), stride=(2, 2), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
          (conv1): Conv2d(
            256, 128, kernel_size=(1, 1), stride=(2, 2), bias=False
            (norm): FrozenBatchNorm2d(num_features=128, eps=1e-05)
          )
          (conv2): Conv2d(
            128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=128, eps=1e-05)
          )
          (conv3): Conv2d(
            128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
        )
        (1): BottleneckBlock(
          (conv1): Conv2d(
            512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=128, eps=1e-05)
          )
          (conv2): Conv2d(
            128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=128, eps=1e-05)
          )
          (conv3): Conv2d(
            128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
        )
        (2): BottleneckBlock(
          (conv1): Conv2d(
            512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=128, eps=1e-05)
          )
          (conv2): Conv2d(
            128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=128, eps=1e-05)
          )
          (conv3): Conv2d(
            128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
        )
        (3): BottleneckBlock(
          (conv1): Conv2d(
            512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=128, eps=1e-05)
          )
          (conv2): Conv2d(
            128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=128, eps=1e-05)
          )
          (conv3): Conv2d(
            128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
        )
      )
      (res4): Sequential(
        (0): BottleneckBlock(
          (shortcut): Conv2d(
            512, 1024, kernel_size=(1, 1), stride=(2, 2), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
          (conv1): Conv2d(
            512, 256, kernel_size=(1, 1), stride=(2, 2), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv2): Conv2d(
            256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (1): BottleneckBlock(
          (conv1): Conv2d(
            1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv2): Conv2d(
            256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (2): BottleneckBlock(
          (conv1): Conv2d(
            1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv2): Conv2d(
            256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (3): BottleneckBlock(
          (conv1): Conv2d(
            1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv2): Conv2d(
            256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (4): BottleneckBlock(
          (conv1): Conv2d(
            1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv2): Conv2d(
            256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (5): BottleneckBlock(
          (conv1): Conv2d(
            1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv2): Conv2d(
            256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
      )
      (res5): Sequential(
        (0): BottleneckBlock(
          (shortcut): Conv2d(
            1024, 2048, kernel_size=(1, 1), stride=(2, 2), bias=False
            (norm): FrozenBatchNorm2d(num_features=2048, eps=1e-05)
          )
          (conv1): Conv2d(
            1024, 512, kernel_size=(1, 1), stride=(2, 2), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
          (conv2): Conv2d(
            512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
          (conv3): Conv2d(
            512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=2048, eps=1e-05)
          )
        )
        (1): BottleneckBlock(
          (conv1): Conv2d(
            2048, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
          (conv2): Conv2d(
            512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
          (conv3): Conv2d(
            512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=2048, eps=1e-05)
          )
        )
        (2): BottleneckBlock(
          (conv1): Conv2d(
            2048, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
          (conv2): Conv2d(
            512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
          (conv3): Conv2d(
            512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=2048, eps=1e-05)
          )
        )
      )
    )
  )
  (proposal_generator): RPN(
    (rpn_head): StandardRPNHead(
      (conv): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      (objectness_logits): Conv2d(256, 3, kernel_size=(1, 1), stride=(1, 1))
      (anchor_deltas): Conv2d(256, 12, kernel_size=(1, 1), stride=(1, 1))
    )
    (anchor_generator): DefaultAnchorGenerator(
      (cell_anchors): BufferList()
    )
  )
  (roi_heads): StandardROIHeads(
    (box_pooler): ROIPooler(
      (level_poolers): ModuleList(
        (0): ROIAlign(output_size=(7, 7), spatial_scale=0.25, sampling_ratio=0, aligned=True)
        (1): ROIAlign(output_size=(7, 7), spatial_scale=0.125, sampling_ratio=0, aligned=True)
        (2): ROIAlign(output_size=(7, 7), spatial_scale=0.0625, sampling_ratio=0, aligned=True)
        (3): ROIAlign(output_size=(7, 7), spatial_scale=0.03125, sampling_ratio=0, aligned=True)
      )
    )
    (box_head): FastRCNNConvFCHead(
      (flatten): Flatten()
      (fc1): Linear(in_features=12544, out_features=1024, bias=True)
      (fc_relu1): ReLU()
      (fc2): Linear(in_features=1024, out_features=1024, bias=True)
      (fc_relu2): ReLU()
    )
    (box_predictor): FastRCNNOutputLayers(
      (cls_score): Linear(in_features=1024, out_features=81, bias=True)
      (bbox_pred): Linear(in_features=1024, out_features=320, bias=True)
    )
    (mask_pooler): ROIPooler(
      (level_poolers): ModuleList(
        (0): ROIAlign(output_size=(14, 14), spatial_scale=0.25, sampling_ratio=0, aligned=True)
        (1): ROIAlign(output_size=(14, 14), spatial_scale=0.125, sampling_ratio=0, aligned=True)
        (2): ROIAlign(output_size=(14, 14), spatial_scale=0.0625, sampling_ratio=0, aligned=True)
        (3): ROIAlign(output_size=(14, 14), spatial_scale=0.03125, sampling_ratio=0, aligned=True)
      )
    )
    (mask_head): MaskRCNNConvUpsampleHead(
      (mask_fcn1): Conv2d(
        256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1)
        (activation): ReLU()
      )
      (mask_fcn2): Conv2d(
        256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1)
        (activation): ReLU()
      )
      (mask_fcn3): Conv2d(
        256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1)
        (activation): ReLU()
      )
      (mask_fcn4): Conv2d(
        256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1)
        (activation): ReLU()
      )
      (deconv): ConvTranspose2d(256, 256, kernel_size=(2, 2), stride=(2, 2))
      (deconv_relu): ReLU()
      (predictor): Conv2d(256, 80, kernel_size=(1, 1), stride=(1, 1))
    )
  )
  (sem_seg_head): SemSegPyConvHeadV1(
    (p2): Sequential(
      (0): Sequential(
        (0): PyConv4(
          (conv2_1): Conv2d(256, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (conv2_2): Conv2d(256, 32, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2), groups=4, bias=False)
          (conv2_3): Conv2d(256, 32, kernel_size=(7, 7), stride=(1, 1), padding=(3, 3), groups=8, bias=False)
          (conv2_4): Conv2d(256, 32, kernel_size=(9, 9), stride=(1, 1), padding=(4, 4), groups=16, bias=False)
        )
        (1): GroupNorm(32, 128, eps=1e-05, affine=True)
        (2): ReLU()
      )
    )
    (p3): Sequential(
      (0): Sequential(
        (0): PyConv4(
          (conv2_1): Conv2d(256, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (conv2_2): Conv2d(256, 32, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2), groups=4, bias=False)
          (conv2_3): Conv2d(256, 32, kernel_size=(7, 7), stride=(1, 1), padding=(3, 3), groups=8, bias=False)
          (conv2_4): Conv2d(256, 32, kernel_size=(9, 9), stride=(1, 1), padding=(4, 4), groups=16, bias=False)
        )
        (1): GroupNorm(32, 128, eps=1e-05, affine=True)
        (2): ReLU()
        (3): Upsample(scale_factor=2.0, mode=bilinear)
      )
    )
    (p4): Sequential(
      (0): Sequential(
        (0): PyConv3(
          (conv2_1): Conv2d(256, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (conv2_2): Conv2d(256, 32, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2), groups=4, bias=False)
          (conv2_3): Conv2d(256, 64, kernel_size=(7, 7), stride=(1, 1), padding=(3, 3), groups=8, bias=False)
        )
        (1): GroupNorm(32, 128, eps=1e-05, affine=True)
        (2): ReLU()
        (3): Upsample(scale_factor=2.0, mode=bilinear)
      )
      (1): Sequential(
        (0): PyConv4(
          (conv2_1): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (conv2_2): Conv2d(128, 32, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2), groups=4, bias=False)
          (conv2_3): Conv2d(128, 32, kernel_size=(7, 7), stride=(1, 1), padding=(3, 3), groups=8, bias=False)
          (conv2_4): Conv2d(128, 32, kernel_size=(9, 9), stride=(1, 1), padding=(4, 4), groups=16, bias=False)
        )
        (1): GroupNorm(32, 128, eps=1e-05, affine=True)
        (2): ReLU()
        (3): Upsample(scale_factor=2.0, mode=bilinear)
      )
    )
    (p5): Sequential(
      (0): Sequential(
        (0): PyConv2(
          (conv2_1): Conv2d(256, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (conv2_2): Conv2d(256, 64, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2), groups=4, bias=False)
        )
        (1): GroupNorm(32, 128, eps=1e-05, affine=True)
        (2): ReLU()
        (3): Upsample(scale_factor=2.0, mode=bilinear)
      )
      (1): Sequential(
        (0): PyConv3(
          (conv2_1): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (conv2_2): Conv2d(128, 32, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2), groups=4, bias=False)
          (conv2_3): Conv2d(128, 64, kernel_size=(7, 7), stride=(1, 1), padding=(3, 3), groups=8, bias=False)
        )
        (1): GroupNorm(32, 128, eps=1e-05, affine=True)
        (2): ReLU()
        (3): Upsample(scale_factor=2.0, mode=bilinear)
      )
      (2): Sequential(
        (0): PyConv4(
          (conv2_1): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (conv2_2): Conv2d(128, 32, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2), groups=4, bias=False)
          (conv2_3): Conv2d(128, 32, kernel_size=(7, 7), stride=(1, 1), padding=(3, 3), groups=8, bias=False)
          (conv2_4): Conv2d(128, 32, kernel_size=(9, 9), stride=(1, 1), padding=(4, 4), groups=16, bias=False)
        )
        (1): GroupNorm(32, 128, eps=1e-05, affine=True)
        (2): ReLU()
        (3): Upsample(scale_factor=2.0, mode=bilinear)
      )
    )
    (predictor): Conv2d(128, 54, kernel_size=(1, 1), stride=(1, 1))
  )
)
[12/17 08:52:42] detectron2.data.datasets.coco INFO: Loading /cvhci/temp/wmao/detectron2_datasets/coco/annotations/instances_train2017.json takes 25.63 seconds.
[12/17 08:52:43] detectron2.data.datasets.coco INFO: Loaded 118287 images in COCO format from /cvhci/temp/wmao/detectron2_datasets/coco/annotations/instances_train2017.json
[12/17 08:52:57] detectron2.data.datasets.coco INFO: Loaded 118287 images with semantic segmentation from /cvhci/temp/wmao/detectron2_datasets/coco/train2017
[12/17 08:53:06] detectron2.data.build INFO: Distribution of instances among all 80 categories:
[36m|   category    | #instances   |   category   | #instances   |   category    | #instances   |
|:-------------:|:-------------|:------------:|:-------------|:-------------:|:-------------|
|    person     | 257253       |   bicycle    | 7056         |      car      | 43533        |
|  motorcycle   | 8654         |   airplane   | 5129         |      bus      | 6061         |
|     train     | 4570         |    truck     | 9970         |     boat      | 10576        |
| traffic light | 12842        | fire hydrant | 1865         |   stop sign   | 1983         |
| parking meter | 1283         |    bench     | 9820         |     bird      | 10542        |
|      cat      | 4766         |     dog      | 5500         |     horse     | 6567         |
|     sheep     | 9223         |     cow      | 8014         |   elephant    | 5484         |
|     bear      | 1294         |    zebra     | 5269         |    giraffe    | 5128         |
|   backpack    | 8714         |   umbrella   | 11265        |    handbag    | 12342        |
|      tie      | 6448         |   suitcase   | 6112         |    frisbee    | 2681         |
|     skis      | 6623         |  snowboard   | 2681         |  sports ball  | 6299         |
|     kite      | 8802         | baseball bat | 3273         | baseball gl.. | 3747         |
|  skateboard   | 5536         |  surfboard   | 6095         | tennis racket | 4807         |
|    bottle     | 24070        |  wine glass  | 7839         |      cup      | 20574        |
|     fork      | 5474         |    knife     | 7760         |     spoon     | 6159         |
|     bowl      | 14323        |    banana    | 9195         |     apple     | 5776         |
|   sandwich    | 4356         |    orange    | 6302         |   broccoli    | 7261         |
|    carrot     | 7758         |   hot dog    | 2884         |     pizza     | 5807         |
|     donut     | 7005         |     cake     | 6296         |     chair     | 38073        |
|     couch     | 5779         | potted plant | 8631         |      bed      | 4192         |
| dining table  | 15695        |    toilet    | 4149         |      tv       | 5803         |
|    laptop     | 4960         |    mouse     | 2261         |    remote     | 5700         |
|   keyboard    | 2854         |  cell phone  | 6422         |   microwave   | 1672         |
|     oven      | 3334         |   toaster    | 225          |     sink      | 5609         |
| refrigerator  | 2634         |     book     | 24077        |     clock     | 6320         |
|     vase      | 6577         |   scissors   | 1464         |  teddy bear   | 4729         |
|  hair drier   | 198          |  toothbrush  | 1945         |               |              |
|     total     | 849949       |              |              |               |              |[0m
[12/17 08:53:06] detectron2.data.common INFO: Serializing 118287 elements to byte tensors and concatenating them all ...
[12/17 08:53:12] detectron2.data.common INFO: Serialized dataset takes 466.45 MiB
[12/17 08:53:12] detectron2.data.dataset_mapper INFO: Augmentations used in training: [ResizeShortestEdge(short_edge_length=(640, 672, 704, 736, 768, 800), max_size=1333, sample_style='choice'), RandomFlip()]
[12/17 08:53:12] detectron2.data.build INFO: Using training sampler TrainingSampler
[12/17 08:53:33] fvcore.common.checkpoint INFO: Loading checkpoint from detectron2://ImageNetPretrained/MSRA/R-50.pkl
[12/17 08:53:33] fvcore.common.file_io INFO: URL https://dl.fbaipublicfiles.com/detectron2/ImageNetPretrained/MSRA/R-50.pkl cached in /home/wmao/.torch/fvcore_cache/detectron2/ImageNetPretrained/MSRA/R-50.pkl
[12/17 08:53:34] detectron2.checkpoint.c2_model_loading INFO: Remapping C2 weights ......
[12/17 08:53:34] detectron2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res2.0.conv1.norm.bias            loaded from res2_0_branch2a_bn_beta           of shape (64,)
[12/17 08:53:34] detectron2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res2.0.conv1.norm.running_mean    loaded from res2_0_branch2a_bn_running_mean   of shape (64,)
[12/17 08:53:34] detectron2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res2.0.conv1.norm.running_var     loaded from res2_0_branch2a_bn_running_var    of shape (64,)
[12/17 08:53:34] detectron2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res2.0.conv1.norm.weight          loaded from res2_0_branch2a_bn_gamma          of shape (64,)
[12/17 08:53:34] detectron2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res2.0.conv1.weight               loaded from res2_0_branch2a_w                 of shape (64, 64, 1, 1)
[12/17 08:53:34] detectron2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res2.0.conv2.norm.bias            loaded from res2_0_branch2b_bn_beta           of shape (64,)
[12/17 08:53:34] detectron2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res2.0.conv2.norm.running_mean    loaded from res2_0_branch2b_bn_running_mean   of shape (64,)
[12/17 08:53:34] detectron2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res2.0.conv2.norm.running_var     loaded from res2_0_branch2b_bn_running_var    of shape (64,)
[12/17 08:53:34] detectron2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res2.0.conv2.norm.weight          loaded from res2_0_branch2b_bn_gamma          of shape (64,)
[12/17 08:53:34] detectron2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res2.0.conv2.weight               loaded from res2_0_branch2b_w                 of shape (64, 64, 3, 3)
[12/17 08:53:34] detectron2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res2.0.conv3.norm.bias            loaded from res2_0_branch2c_bn_beta           of shape (256,)
[12/17 08:53:34] detectron2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res2.0.conv3.norm.running_mean    loaded from res2_0_branch2c_bn_running_mean   of shape (256,)
[12/17 08:53:34] detectron2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res2.0.conv3.norm.running_var     loaded from res2_0_branch2c_bn_running_var    of shape (256,)
[12/17 08:53:34] detectron2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res2.0.conv3.norm.weight          loaded from res2_0_branch2c_bn_gamma          of shape (256,)
[12/17 08:53:34] detectron2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res2.0.conv3.weight               loaded from res2_0_branch2c_w                 of shape (256, 64, 1, 1)
[12/17 08:53:34] detectron2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res2.0.shortcut.norm.bias         loaded from res2_0_branch1_bn_beta            of shape (256,)
[12/17 08:53:34] detectron2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res2.0.shortcut.norm.running_mean loaded from res2_0_branch1_bn_running_mean    of shape (256,)
[12/17 08:53:34] detectron2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res2.0.shortcut.norm.running_var  loaded from res2_0_branch1_bn_running_var     of shape (256,)
[12/17 08:53:34] detectron2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res2.0.shortcut.norm.weight       loaded from res2_0_branch1_bn_gamma           of shape (256,)
[12/17 08:53:34] detectron2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res2.0.shortcut.weight            loaded from res2_0_branch1_w                  of shape (256, 64, 1, 1)
[12/17 08:53:34] detectron2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res2.1.conv1.norm.bias            loaded from res2_1_branch2a_bn_beta           of shape (64,)
[12/17 08:53:34] detectron2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res2.1.conv1.norm.running_mean    loaded from res2_1_branch2a_bn_running_mean   of shape (64,)
[12/17 08:53:34] detectron2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res2.1.conv1.norm.running_var     loaded from res2_1_branch2a_bn_running_var    of shape (64,)
[12/17 08:53:34] detectron2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res2.1.conv1.norm.weight          loaded from res2_1_branch2a_bn_gamma          of shape (64,)
[12/17 08:53:34] detectron2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res2.1.conv1.weight               loaded from res2_1_branch2a_w                 of shape (64, 256, 1, 1)
[12/17 08:53:34] detectron2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res2.1.conv2.norm.bias            loaded from res2_1_branch2b_bn_beta           of shape (64,)
[12/17 08:53:34] detectron2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res2.1.conv2.norm.running_mean    loaded from res2_1_branch2b_bn_running_mean   of shape (64,)
[12/17 08:53:34] detectron2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res2.1.conv2.norm.running_var     loaded from res2_1_branch2b_bn_running_var    of shape (64,)
[12/17 08:53:34] detectron2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res2.1.conv2.norm.weight          loaded from res2_1_branch2b_bn_gamma          of shape (64,)
[12/17 08:53:34] detectron2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res2.1.conv2.weight               loaded from res2_1_branch2b_w                 of shape (64, 64, 3, 3)
[12/17 08:53:34] detectron2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res2.1.conv3.norm.bias            loaded from res2_1_branch2c_bn_beta           of shape (256,)
[12/17 08:53:34] detectron2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res2.1.conv3.norm.running_mean    loaded from res2_1_branch2c_bn_running_mean   of shape (256,)
[12/17 08:53:34] detectron2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res2.1.conv3.norm.running_var     loaded from res2_1_branch2c_bn_running_var    of shape (256,)
[12/17 08:53:34] detectron2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res2.1.conv3.norm.weight          loaded from res2_1_branch2c_bn_gamma          of shape (256,)
[12/17 08:53:34] detectron2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res2.1.conv3.weight               loaded from res2_1_branch2c_w                 of shape (256, 64, 1, 1)
[12/17 08:53:34] detectron2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res2.2.conv1.norm.bias            loaded from res2_2_branch2a_bn_beta           of shape (64,)
[12/17 08:53:34] detectron2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res2.2.conv1.norm.running_mean    loaded from res2_2_branch2a_bn_running_mean   of shape (64,)
[12/17 08:53:34] detectron2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res2.2.conv1.norm.running_var     loaded from res2_2_branch2a_bn_running_var    of shape (64,)
[12/17 08:53:34] detectron2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res2.2.conv1.norm.weight          loaded from res2_2_branch2a_bn_gamma          of shape (64,)
[12/17 08:53:34] detectron2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res2.2.conv1.weight               loaded from res2_2_branch2a_w                 of shape (64, 256, 1, 1)
[12/17 08:53:34] detectron2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res2.2.conv2.norm.bias            loaded from res2_2_branch2b_bn_beta           of shape (64,)
[12/17 08:53:34] detectron2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res2.2.conv2.norm.running_mean    loaded from res2_2_branch2b_bn_running_mean   of shape (64,)
[12/17 08:53:34] detectron2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res2.2.conv2.norm.running_var     loaded from res2_2_branch2b_bn_running_var    of shape (64,)
[12/17 08:53:34] detectron2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res2.2.conv2.norm.weight          loaded from res2_2_branch2b_bn_gamma          of shape (64,)
[12/17 08:53:34] detectron2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res2.2.conv2.weight               loaded from res2_2_branch2b_w                 of shape (64, 64, 3, 3)
[12/17 08:53:34] detectron2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res2.2.conv3.norm.bias            loaded from res2_2_branch2c_bn_beta           of shape (256,)
[12/17 08:53:34] detectron2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res2.2.conv3.norm.running_mean    loaded from res2_2_branch2c_bn_running_mean   of shape (256,)
[12/17 08:53:34] detectron2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res2.2.conv3.norm.running_var     loaded from res2_2_branch2c_bn_running_var    of shape (256,)
[12/17 08:53:34] detectron2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res2.2.conv3.norm.weight          loaded from res2_2_branch2c_bn_gamma          of shape (256,)
[12/17 08:53:34] detectron2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res2.2.conv3.weight               loaded from res2_2_branch2c_w                 of shape (256, 64, 1, 1)
[12/17 08:53:34] detectron2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res3.0.conv1.norm.bias            loaded from res3_0_branch2a_bn_beta           of shape (128,)
[12/17 08:53:34] detectron2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res3.0.conv1.norm.running_mean    loaded from res3_0_branch2a_bn_running_mean   of shape (128,)
[12/17 08:53:34] detectron2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res3.0.conv1.norm.running_var     loaded from res3_0_branch2a_bn_running_var    of shape (128,)
[12/17 08:53:34] detectron2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res3.0.conv1.norm.weight          loaded from res3_0_branch2a_bn_gamma          of shape (128,)
[12/17 08:53:34] detectron2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res3.0.conv1.weight               loaded from res3_0_branch2a_w                 of shape (128, 256, 1, 1)
[12/17 08:53:34] detectron2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res3.0.conv2.norm.bias            loaded from res3_0_branch2b_bn_beta           of shape (128,)
[12/17 08:53:34] detectron2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res3.0.conv2.norm.running_mean    loaded from res3_0_branch2b_bn_running_mean   of shape (128,)
[12/17 08:53:34] detectron2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res3.0.conv2.norm.running_var     loaded from res3_0_branch2b_bn_running_var    of shape (128,)
[12/17 08:53:34] detectron2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res3.0.conv2.norm.weight          loaded from res3_0_branch2b_bn_gamma          of shape (128,)
[12/17 08:53:34] detectron2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res3.0.conv2.weight               loaded from res3_0_branch2b_w                 of shape (128, 128, 3, 3)
[12/17 08:53:34] detectron2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res3.0.conv3.norm.bias            loaded from res3_0_branch2c_bn_beta           of shape (512,)
[12/17 08:53:34] detectron2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res3.0.conv3.norm.running_mean    loaded from res3_0_branch2c_bn_running_mean   of shape (512,)
[12/17 08:53:34] detectron2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res3.0.conv3.norm.running_var     loaded from res3_0_branch2c_bn_running_var    of shape (512,)
[12/17 08:53:34] detectron2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res3.0.conv3.norm.weight          loaded from res3_0_branch2c_bn_gamma          of shape (512,)
[12/17 08:53:34] detectron2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res3.0.conv3.weight               loaded from res3_0_branch2c_w                 of shape (512, 128, 1, 1)
[12/17 08:53:34] detectron2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res3.0.shortcut.norm.bias         loaded from res3_0_branch1_bn_beta            of shape (512,)
[12/17 08:53:34] detectron2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res3.0.shortcut.norm.running_mean loaded from res3_0_branch1_bn_running_mean    of shape (512,)
[12/17 08:53:34] detectron2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res3.0.shortcut.norm.running_var  loaded from res3_0_branch1_bn_running_var     of shape (512,)
[12/17 08:53:34] detectron2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res3.0.shortcut.norm.weight       loaded from res3_0_branch1_bn_gamma           of shape (512,)
[12/17 08:53:34] detectron2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res3.0.shortcut.weight            loaded from res3_0_branch1_w                  of shape (512, 256, 1, 1)
[12/17 08:53:34] detectron2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res3.1.conv1.norm.bias            loaded from res3_1_branch2a_bn_beta           of shape (128,)
[12/17 08:53:34] detectron2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res3.1.conv1.norm.running_mean    loaded from res3_1_branch2a_bn_running_mean   of shape (128,)
[12/17 08:53:34] detectron2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res3.1.conv1.norm.running_var     loaded from res3_1_branch2a_bn_running_var    of shape (128,)
[12/17 08:53:34] detectron2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res3.1.conv1.norm.weight          loaded from res3_1_branch2a_bn_gamma          of shape (128,)
[12/17 08:53:34] detectron2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res3.1.conv1.weight               loaded from res3_1_branch2a_w                 of shape (128, 512, 1, 1)
[12/17 08:53:34] detectron2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res3.1.conv2.norm.bias            loaded from res3_1_branch2b_bn_beta           of shape (128,)
[12/17 08:53:34] detectron2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res3.1.conv2.norm.running_mean    loaded from res3_1_branch2b_bn_running_mean   of shape (128,)
[12/17 08:53:34] detectron2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res3.1.conv2.norm.running_var     loaded from res3_1_branch2b_bn_running_var    of shape (128,)
[12/17 08:53:34] detectron2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res3.1.conv2.norm.weight          loaded from res3_1_branch2b_bn_gamma          of shape (128,)
[12/17 08:53:34] detectron2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res3.1.conv2.weight               loaded from res3_1_branch2b_w                 of shape (128, 128, 3, 3)
[12/17 08:53:34] detectron2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res3.1.conv3.norm.bias            loaded from res3_1_branch2c_bn_beta           of shape (512,)
[12/17 08:53:34] detectron2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res3.1.conv3.norm.running_mean    loaded from res3_1_branch2c_bn_running_mean   of shape (512,)
[12/17 08:53:34] detectron2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res3.1.conv3.norm.running_var     loaded from res3_1_branch2c_bn_running_var    of shape (512,)
[12/17 08:53:34] detectron2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res3.1.conv3.norm.weight          loaded from res3_1_branch2c_bn_gamma          of shape (512,)
[12/17 08:53:34] detectron2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res3.1.conv3.weight               loaded from res3_1_branch2c_w                 of shape (512, 128, 1, 1)
[12/17 08:53:34] detectron2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res3.2.conv1.norm.bias            loaded from res3_2_branch2a_bn_beta           of shape (128,)
[12/17 08:53:34] detectron2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res3.2.conv1.norm.running_mean    loaded from res3_2_branch2a_bn_running_mean   of shape (128,)
[12/17 08:53:34] detectron2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res3.2.conv1.norm.running_var     loaded from res3_2_branch2a_bn_running_var    of shape (128,)
[12/17 08:53:34] detectron2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res3.2.conv1.norm.weight          loaded from res3_2_branch2a_bn_gamma          of shape (128,)
[12/17 08:53:34] detectron2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res3.2.conv1.weight               loaded from res3_2_branch2a_w                 of shape (128, 512, 1, 1)
[12/17 08:53:34] detectron2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res3.2.conv2.norm.bias            loaded from res3_2_branch2b_bn_beta           of shape (128,)
[12/17 08:53:34] detectron2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res3.2.conv2.norm.running_mean    loaded from res3_2_branch2b_bn_running_mean   of shape (128,)
[12/17 08:53:34] detectron2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res3.2.conv2.norm.running_var     loaded from res3_2_branch2b_bn_running_var    of shape (128,)
[12/17 08:53:34] detectron2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res3.2.conv2.norm.weight          loaded from res3_2_branch2b_bn_gamma          of shape (128,)
[12/17 08:53:34] detectron2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res3.2.conv2.weight               loaded from res3_2_branch2b_w                 of shape (128, 128, 3, 3)
[12/17 08:53:34] detectron2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res3.2.conv3.norm.bias            loaded from res3_2_branch2c_bn_beta           of shape (512,)
[12/17 08:53:34] detectron2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res3.2.conv3.norm.running_mean    loaded from res3_2_branch2c_bn_running_mean   of shape (512,)
[12/17 08:53:34] detectron2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res3.2.conv3.norm.running_var     loaded from res3_2_branch2c_bn_running_var    of shape (512,)
[12/17 08:53:34] detectron2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res3.2.conv3.norm.weight          loaded from res3_2_branch2c_bn_gamma          of shape (512,)
[12/17 08:53:34] detectron2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res3.2.conv3.weight               loaded from res3_2_branch2c_w                 of shape (512, 128, 1, 1)
[12/17 08:53:34] detectron2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res3.3.conv1.norm.bias            loaded from res3_3_branch2a_bn_beta           of shape (128,)
[12/17 08:53:34] detectron2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res3.3.conv1.norm.running_mean    loaded from res3_3_branch2a_bn_running_mean   of shape (128,)
[12/17 08:53:34] detectron2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res3.3.conv1.norm.running_var     loaded from res3_3_branch2a_bn_running_var    of shape (128,)
[12/17 08:53:34] detectron2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res3.3.conv1.norm.weight          loaded from res3_3_branch2a_bn_gamma          of shape (128,)
[12/17 08:53:34] detectron2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res3.3.conv1.weight               loaded from res3_3_branch2a_w                 of shape (128, 512, 1, 1)
[12/17 08:53:34] detectron2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res3.3.conv2.norm.bias            loaded from res3_3_branch2b_bn_beta           of shape (128,)
[12/17 08:53:34] detectron2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res3.3.conv2.norm.running_mean    loaded from res3_3_branch2b_bn_running_mean   of shape (128,)
[12/17 08:53:34] detectron2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res3.3.conv2.norm.running_var     loaded from res3_3_branch2b_bn_running_var    of shape (128,)
[12/17 08:53:34] detectron2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res3.3.conv2.norm.weight          loaded from res3_3_branch2b_bn_gamma          of shape (128,)
[12/17 08:53:34] detectron2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res3.3.conv2.weight               loaded from res3_3_branch2b_w                 of shape (128, 128, 3, 3)
[12/17 08:53:34] detectron2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res3.3.conv3.norm.bias            loaded from res3_3_branch2c_bn_beta           of shape (512,)
[12/17 08:53:34] detectron2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res3.3.conv3.norm.running_mean    loaded from res3_3_branch2c_bn_running_mean   of shape (512,)
[12/17 08:53:34] detectron2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res3.3.conv3.norm.running_var     loaded from res3_3_branch2c_bn_running_var    of shape (512,)
[12/17 08:53:34] detectron2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res3.3.conv3.norm.weight          loaded from res3_3_branch2c_bn_gamma          of shape (512,)
[12/17 08:53:34] detectron2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res3.3.conv3.weight               loaded from res3_3_branch2c_w                 of shape (512, 128, 1, 1)
[12/17 08:53:34] detectron2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.0.conv1.norm.bias            loaded from res4_0_branch2a_bn_beta           of shape (256,)
[12/17 08:53:34] detectron2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.0.conv1.norm.running_mean    loaded from res4_0_branch2a_bn_running_mean   of shape (256,)
[12/17 08:53:34] detectron2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.0.conv1.norm.running_var     loaded from res4_0_branch2a_bn_running_var    of shape (256,)
[12/17 08:53:34] detectron2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.0.conv1.norm.weight          loaded from res4_0_branch2a_bn_gamma          of shape (256,)
[12/17 08:53:34] detectron2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.0.conv1.weight               loaded from res4_0_branch2a_w                 of shape (256, 512, 1, 1)
[12/17 08:53:34] detectron2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.0.conv2.norm.bias            loaded from res4_0_branch2b_bn_beta           of shape (256,)
[12/17 08:53:34] detectron2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.0.conv2.norm.running_mean    loaded from res4_0_branch2b_bn_running_mean   of shape (256,)
[12/17 08:53:34] detectron2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.0.conv2.norm.running_var     loaded from res4_0_branch2b_bn_running_var    of shape (256,)
[12/17 08:53:34] detectron2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.0.conv2.norm.weight          loaded from res4_0_branch2b_bn_gamma          of shape (256,)
[12/17 08:53:34] detectron2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.0.conv2.weight               loaded from res4_0_branch2b_w                 of shape (256, 256, 3, 3)
[12/17 08:53:34] detectron2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.0.conv3.norm.bias            loaded from res4_0_branch2c_bn_beta           of shape (1024,)
[12/17 08:53:34] detectron2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.0.conv3.norm.running_mean    loaded from res4_0_branch2c_bn_running_mean   of shape (1024,)
[12/17 08:53:34] detectron2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.0.conv3.norm.running_var     loaded from res4_0_branch2c_bn_running_var    of shape (1024,)
[12/17 08:53:34] detectron2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.0.conv3.norm.weight          loaded from res4_0_branch2c_bn_gamma          of shape (1024,)
[12/17 08:53:34] detectron2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.0.conv3.weight               loaded from res4_0_branch2c_w                 of shape (1024, 256, 1, 1)
[12/17 08:53:34] detectron2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.0.shortcut.norm.bias         loaded from res4_0_branch1_bn_beta            of shape (1024,)
[12/17 08:53:34] detectron2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.0.shortcut.norm.running_mean loaded from res4_0_branch1_bn_running_mean    of shape (1024,)
[12/17 08:53:34] detectron2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.0.shortcut.norm.running_var  loaded from res4_0_branch1_bn_running_var     of shape (1024,)
[12/17 08:53:34] detectron2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.0.shortcut.norm.weight       loaded from res4_0_branch1_bn_gamma           of shape (1024,)
[12/17 08:53:34] detectron2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.0.shortcut.weight            loaded from res4_0_branch1_w                  of shape (1024, 512, 1, 1)
[12/17 08:53:34] detectron2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.1.conv1.norm.bias            loaded from res4_1_branch2a_bn_beta           of shape (256,)
[12/17 08:53:34] detectron2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.1.conv1.norm.running_mean    loaded from res4_1_branch2a_bn_running_mean   of shape (256,)
[12/17 08:53:34] detectron2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.1.conv1.norm.running_var     loaded from res4_1_branch2a_bn_running_var    of shape (256,)
[12/17 08:53:34] detectron2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.1.conv1.norm.weight          loaded from res4_1_branch2a_bn_gamma          of shape (256,)
[12/17 08:53:34] detectron2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.1.conv1.weight               loaded from res4_1_branch2a_w                 of shape (256, 1024, 1, 1)
[12/17 08:53:34] detectron2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.1.conv2.norm.bias            loaded from res4_1_branch2b_bn_beta           of shape (256,)
[12/17 08:53:34] detectron2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.1.conv2.norm.running_mean    loaded from res4_1_branch2b_bn_running_mean   of shape (256,)
[12/17 08:53:34] detectron2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.1.conv2.norm.running_var     loaded from res4_1_branch2b_bn_running_var    of shape (256,)
[12/17 08:53:34] detectron2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.1.conv2.norm.weight          loaded from res4_1_branch2b_bn_gamma          of shape (256,)
[12/17 08:53:34] detectron2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.1.conv2.weight               loaded from res4_1_branch2b_w                 of shape (256, 256, 3, 3)
[12/17 08:53:34] detectron2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.1.conv3.norm.bias            loaded from res4_1_branch2c_bn_beta           of shape (1024,)
[12/17 08:53:34] detectron2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.1.conv3.norm.running_mean    loaded from res4_1_branch2c_bn_running_mean   of shape (1024,)
[12/17 08:53:34] detectron2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.1.conv3.norm.running_var     loaded from res4_1_branch2c_bn_running_var    of shape (1024,)
[12/17 08:53:34] detectron2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.1.conv3.norm.weight          loaded from res4_1_branch2c_bn_gamma          of shape (1024,)
[12/17 08:53:34] detectron2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.1.conv3.weight               loaded from res4_1_branch2c_w                 of shape (1024, 256, 1, 1)
[12/17 08:53:34] detectron2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.2.conv1.norm.bias            loaded from res4_2_branch2a_bn_beta           of shape (256,)
[12/17 08:53:34] detectron2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.2.conv1.norm.running_mean    loaded from res4_2_branch2a_bn_running_mean   of shape (256,)
[12/17 08:53:34] detectron2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.2.conv1.norm.running_var     loaded from res4_2_branch2a_bn_running_var    of shape (256,)
[12/17 08:53:34] detectron2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.2.conv1.norm.weight          loaded from res4_2_branch2a_bn_gamma          of shape (256,)
[12/17 08:53:34] detectron2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.2.conv1.weight               loaded from res4_2_branch2a_w                 of shape (256, 1024, 1, 1)
[12/17 08:53:34] detectron2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.2.conv2.norm.bias            loaded from res4_2_branch2b_bn_beta           of shape (256,)
[12/17 08:53:34] detectron2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.2.conv2.norm.running_mean    loaded from res4_2_branch2b_bn_running_mean   of shape (256,)
[12/17 08:53:34] detectron2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.2.conv2.norm.running_var     loaded from res4_2_branch2b_bn_running_var    of shape (256,)
[12/17 08:53:34] detectron2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.2.conv2.norm.weight          loaded from res4_2_branch2b_bn_gamma          of shape (256,)
[12/17 08:53:34] detectron2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.2.conv2.weight               loaded from res4_2_branch2b_w                 of shape (256, 256, 3, 3)
[12/17 08:53:34] detectron2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.2.conv3.norm.bias            loaded from res4_2_branch2c_bn_beta           of shape (1024,)
[12/17 08:53:34] detectron2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.2.conv3.norm.running_mean    loaded from res4_2_branch2c_bn_running_mean   of shape (1024,)
[12/17 08:53:34] detectron2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.2.conv3.norm.running_var     loaded from res4_2_branch2c_bn_running_var    of shape (1024,)
[12/17 08:53:34] detectron2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.2.conv3.norm.weight          loaded from res4_2_branch2c_bn_gamma          of shape (1024,)
[12/17 08:53:34] detectron2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.2.conv3.weight               loaded from res4_2_branch2c_w                 of shape (1024, 256, 1, 1)
[12/17 08:53:34] detectron2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.3.conv1.norm.bias            loaded from res4_3_branch2a_bn_beta           of shape (256,)
[12/17 08:53:34] detectron2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.3.conv1.norm.running_mean    loaded from res4_3_branch2a_bn_running_mean   of shape (256,)
[12/17 08:53:34] detectron2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.3.conv1.norm.running_var     loaded from res4_3_branch2a_bn_running_var    of shape (256,)
[12/17 08:53:34] detectron2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.3.conv1.norm.weight          loaded from res4_3_branch2a_bn_gamma          of shape (256,)
[12/17 08:53:34] detectron2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.3.conv1.weight               loaded from res4_3_branch2a_w                 of shape (256, 1024, 1, 1)
[12/17 08:53:34] detectron2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.3.conv2.norm.bias            loaded from res4_3_branch2b_bn_beta           of shape (256,)
[12/17 08:53:34] detectron2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.3.conv2.norm.running_mean    loaded from res4_3_branch2b_bn_running_mean   of shape (256,)
[12/17 08:53:34] detectron2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.3.conv2.norm.running_var     loaded from res4_3_branch2b_bn_running_var    of shape (256,)
[12/17 08:53:34] detectron2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.3.conv2.norm.weight          loaded from res4_3_branch2b_bn_gamma          of shape (256,)
[12/17 08:53:34] detectron2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.3.conv2.weight               loaded from res4_3_branch2b_w                 of shape (256, 256, 3, 3)
[12/17 08:53:34] detectron2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.3.conv3.norm.bias            loaded from res4_3_branch2c_bn_beta           of shape (1024,)
[12/17 08:53:34] detectron2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.3.conv3.norm.running_mean    loaded from res4_3_branch2c_bn_running_mean   of shape (1024,)
[12/17 08:53:34] detectron2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.3.conv3.norm.running_var     loaded from res4_3_branch2c_bn_running_var    of shape (1024,)
[12/17 08:53:34] detectron2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.3.conv3.norm.weight          loaded from res4_3_branch2c_bn_gamma          of shape (1024,)
[12/17 08:53:34] detectron2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.3.conv3.weight               loaded from res4_3_branch2c_w                 of shape (1024, 256, 1, 1)
[12/17 08:53:34] detectron2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.4.conv1.norm.bias            loaded from res4_4_branch2a_bn_beta           of shape (256,)
[12/17 08:53:34] detectron2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.4.conv1.norm.running_mean    loaded from res4_4_branch2a_bn_running_mean   of shape (256,)
[12/17 08:53:34] detectron2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.4.conv1.norm.running_var     loaded from res4_4_branch2a_bn_running_var    of shape (256,)
[12/17 08:53:34] detectron2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.4.conv1.norm.weight          loaded from res4_4_branch2a_bn_gamma          of shape (256,)
[12/17 08:53:34] detectron2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.4.conv1.weight               loaded from res4_4_branch2a_w                 of shape (256, 1024, 1, 1)
[12/17 08:53:34] detectron2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.4.conv2.norm.bias            loaded from res4_4_branch2b_bn_beta           of shape (256,)
[12/17 08:53:34] detectron2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.4.conv2.norm.running_mean    loaded from res4_4_branch2b_bn_running_mean   of shape (256,)
[12/17 08:53:34] detectron2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.4.conv2.norm.running_var     loaded from res4_4_branch2b_bn_running_var    of shape (256,)
[12/17 08:53:34] detectron2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.4.conv2.norm.weight          loaded from res4_4_branch2b_bn_gamma          of shape (256,)
[12/17 08:53:34] detectron2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.4.conv2.weight               loaded from res4_4_branch2b_w                 of shape (256, 256, 3, 3)
[12/17 08:53:34] detectron2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.4.conv3.norm.bias            loaded from res4_4_branch2c_bn_beta           of shape (1024,)
[12/17 08:53:34] detectron2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.4.conv3.norm.running_mean    loaded from res4_4_branch2c_bn_running_mean   of shape (1024,)
[12/17 08:53:34] detectron2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.4.conv3.norm.running_var     loaded from res4_4_branch2c_bn_running_var    of shape (1024,)
[12/17 08:53:34] detectron2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.4.conv3.norm.weight          loaded from res4_4_branch2c_bn_gamma          of shape (1024,)
[12/17 08:53:34] detectron2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.4.conv3.weight               loaded from res4_4_branch2c_w                 of shape (1024, 256, 1, 1)
[12/17 08:53:34] detectron2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.5.conv1.norm.bias            loaded from res4_5_branch2a_bn_beta           of shape (256,)
[12/17 08:53:34] detectron2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.5.conv1.norm.running_mean    loaded from res4_5_branch2a_bn_running_mean   of shape (256,)
[12/17 08:53:34] detectron2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.5.conv1.norm.running_var     loaded from res4_5_branch2a_bn_running_var    of shape (256,)
[12/17 08:53:34] detectron2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.5.conv1.norm.weight          loaded from res4_5_branch2a_bn_gamma          of shape (256,)
[12/17 08:53:34] detectron2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.5.conv1.weight               loaded from res4_5_branch2a_w                 of shape (256, 1024, 1, 1)
[12/17 08:53:34] detectron2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.5.conv2.norm.bias            loaded from res4_5_branch2b_bn_beta           of shape (256,)
[12/17 08:53:34] detectron2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.5.conv2.norm.running_mean    loaded from res4_5_branch2b_bn_running_mean   of shape (256,)
[12/17 08:53:34] detectron2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.5.conv2.norm.running_var     loaded from res4_5_branch2b_bn_running_var    of shape (256,)
[12/17 08:53:34] detectron2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.5.conv2.norm.weight          loaded from res4_5_branch2b_bn_gamma          of shape (256,)
[12/17 08:53:34] detectron2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.5.conv2.weight               loaded from res4_5_branch2b_w                 of shape (256, 256, 3, 3)
[12/17 08:53:34] detectron2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.5.conv3.norm.bias            loaded from res4_5_branch2c_bn_beta           of shape (1024,)
[12/17 08:53:34] detectron2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.5.conv3.norm.running_mean    loaded from res4_5_branch2c_bn_running_mean   of shape (1024,)
[12/17 08:53:34] detectron2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.5.conv3.norm.running_var     loaded from res4_5_branch2c_bn_running_var    of shape (1024,)
[12/17 08:53:34] detectron2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.5.conv3.norm.weight          loaded from res4_5_branch2c_bn_gamma          of shape (1024,)
[12/17 08:53:34] detectron2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.5.conv3.weight               loaded from res4_5_branch2c_w                 of shape (1024, 256, 1, 1)
[12/17 08:53:34] detectron2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res5.0.conv1.norm.bias            loaded from res5_0_branch2a_bn_beta           of shape (512,)
[12/17 08:53:34] detectron2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res5.0.conv1.norm.running_mean    loaded from res5_0_branch2a_bn_running_mean   of shape (512,)
[12/17 08:53:34] detectron2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res5.0.conv1.norm.running_var     loaded from res5_0_branch2a_bn_running_var    of shape (512,)
[12/17 08:53:34] detectron2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res5.0.conv1.norm.weight          loaded from res5_0_branch2a_bn_gamma          of shape (512,)
[12/17 08:53:34] detectron2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res5.0.conv1.weight               loaded from res5_0_branch2a_w                 of shape (512, 1024, 1, 1)
[12/17 08:53:34] detectron2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res5.0.conv2.norm.bias            loaded from res5_0_branch2b_bn_beta           of shape (512,)
[12/17 08:53:34] detectron2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res5.0.conv2.norm.running_mean    loaded from res5_0_branch2b_bn_running_mean   of shape (512,)
[12/17 08:53:34] detectron2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res5.0.conv2.norm.running_var     loaded from res5_0_branch2b_bn_running_var    of shape (512,)
[12/17 08:53:34] detectron2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res5.0.conv2.norm.weight          loaded from res5_0_branch2b_bn_gamma          of shape (512,)
[12/17 08:53:34] detectron2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res5.0.conv2.weight               loaded from res5_0_branch2b_w                 of shape (512, 512, 3, 3)
[12/17 08:53:34] detectron2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res5.0.conv3.norm.bias            loaded from res5_0_branch2c_bn_beta           of shape (2048,)
[12/17 08:53:34] detectron2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res5.0.conv3.norm.running_mean    loaded from res5_0_branch2c_bn_running_mean   of shape (2048,)
[12/17 08:53:34] detectron2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res5.0.conv3.norm.running_var     loaded from res5_0_branch2c_bn_running_var    of shape (2048,)
[12/17 08:53:34] detectron2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res5.0.conv3.norm.weight          loaded from res5_0_branch2c_bn_gamma          of shape (2048,)
[12/17 08:53:34] detectron2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res5.0.conv3.weight               loaded from res5_0_branch2c_w                 of shape (2048, 512, 1, 1)
[12/17 08:53:34] detectron2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res5.0.shortcut.norm.bias         loaded from res5_0_branch1_bn_beta            of shape (2048,)
[12/17 08:53:34] detectron2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res5.0.shortcut.norm.running_mean loaded from res5_0_branch1_bn_running_mean    of shape (2048,)
[12/17 08:53:34] detectron2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res5.0.shortcut.norm.running_var  loaded from res5_0_branch1_bn_running_var     of shape (2048,)
[12/17 08:53:34] detectron2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res5.0.shortcut.norm.weight       loaded from res5_0_branch1_bn_gamma           of shape (2048,)
[12/17 08:53:34] detectron2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res5.0.shortcut.weight            loaded from res5_0_branch1_w                  of shape (2048, 1024, 1, 1)
[12/17 08:53:34] detectron2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res5.1.conv1.norm.bias            loaded from res5_1_branch2a_bn_beta           of shape (512,)
[12/17 08:53:34] detectron2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res5.1.conv1.norm.running_mean    loaded from res5_1_branch2a_bn_running_mean   of shape (512,)
[12/17 08:53:34] detectron2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res5.1.conv1.norm.running_var     loaded from res5_1_branch2a_bn_running_var    of shape (512,)
[12/17 08:53:34] detectron2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res5.1.conv1.norm.weight          loaded from res5_1_branch2a_bn_gamma          of shape (512,)
[12/17 08:53:34] detectron2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res5.1.conv1.weight               loaded from res5_1_branch2a_w                 of shape (512, 2048, 1, 1)
[12/17 08:53:34] detectron2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res5.1.conv2.norm.bias            loaded from res5_1_branch2b_bn_beta           of shape (512,)
[12/17 08:53:34] detectron2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res5.1.conv2.norm.running_mean    loaded from res5_1_branch2b_bn_running_mean   of shape (512,)
[12/17 08:53:34] detectron2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res5.1.conv2.norm.running_var     loaded from res5_1_branch2b_bn_running_var    of shape (512,)
[12/17 08:53:34] detectron2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res5.1.conv2.norm.weight          loaded from res5_1_branch2b_bn_gamma          of shape (512,)
[12/17 08:53:34] detectron2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res5.1.conv2.weight               loaded from res5_1_branch2b_w                 of shape (512, 512, 3, 3)
[12/17 08:53:34] detectron2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res5.1.conv3.norm.bias            loaded from res5_1_branch2c_bn_beta           of shape (2048,)
[12/17 08:53:34] detectron2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res5.1.conv3.norm.running_mean    loaded from res5_1_branch2c_bn_running_mean   of shape (2048,)
[12/17 08:53:34] detectron2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res5.1.conv3.norm.running_var     loaded from res5_1_branch2c_bn_running_var    of shape (2048,)
[12/17 08:53:34] detectron2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res5.1.conv3.norm.weight          loaded from res5_1_branch2c_bn_gamma          of shape (2048,)
[12/17 08:53:34] detectron2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res5.1.conv3.weight               loaded from res5_1_branch2c_w                 of shape (2048, 512, 1, 1)
[12/17 08:53:34] detectron2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res5.2.conv1.norm.bias            loaded from res5_2_branch2a_bn_beta           of shape (512,)
[12/17 08:53:34] detectron2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res5.2.conv1.norm.running_mean    loaded from res5_2_branch2a_bn_running_mean   of shape (512,)
[12/17 08:53:34] detectron2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res5.2.conv1.norm.running_var     loaded from res5_2_branch2a_bn_running_var    of shape (512,)
[12/17 08:53:34] detectron2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res5.2.conv1.norm.weight          loaded from res5_2_branch2a_bn_gamma          of shape (512,)
[12/17 08:53:34] detectron2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res5.2.conv1.weight               loaded from res5_2_branch2a_w                 of shape (512, 2048, 1, 1)
[12/17 08:53:34] detectron2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res5.2.conv2.norm.bias            loaded from res5_2_branch2b_bn_beta           of shape (512,)
[12/17 08:53:34] detectron2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res5.2.conv2.norm.running_mean    loaded from res5_2_branch2b_bn_running_mean   of shape (512,)
[12/17 08:53:34] detectron2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res5.2.conv2.norm.running_var     loaded from res5_2_branch2b_bn_running_var    of shape (512,)
[12/17 08:53:34] detectron2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res5.2.conv2.norm.weight          loaded from res5_2_branch2b_bn_gamma          of shape (512,)
[12/17 08:53:34] detectron2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res5.2.conv2.weight               loaded from res5_2_branch2b_w                 of shape (512, 512, 3, 3)
[12/17 08:53:34] detectron2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res5.2.conv3.norm.bias            loaded from res5_2_branch2c_bn_beta           of shape (2048,)
[12/17 08:53:34] detectron2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res5.2.conv3.norm.running_mean    loaded from res5_2_branch2c_bn_running_mean   of shape (2048,)
[12/17 08:53:34] detectron2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res5.2.conv3.norm.running_var     loaded from res5_2_branch2c_bn_running_var    of shape (2048,)
[12/17 08:53:34] detectron2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res5.2.conv3.norm.weight          loaded from res5_2_branch2c_bn_gamma          of shape (2048,)
[12/17 08:53:34] detectron2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res5.2.conv3.weight               loaded from res5_2_branch2c_w                 of shape (2048, 512, 1, 1)
[12/17 08:53:34] detectron2.checkpoint.c2_model_loading INFO: backbone.bottom_up.stem.conv1.norm.bias              loaded from res_conv1_bn_beta                 of shape (64,)
[12/17 08:53:34] detectron2.checkpoint.c2_model_loading INFO: backbone.bottom_up.stem.conv1.norm.running_mean      loaded from res_conv1_bn_running_mean         of shape (64,)
[12/17 08:53:34] detectron2.checkpoint.c2_model_loading INFO: backbone.bottom_up.stem.conv1.norm.running_var       loaded from res_conv1_bn_running_var          of shape (64,)
[12/17 08:53:34] detectron2.checkpoint.c2_model_loading INFO: backbone.bottom_up.stem.conv1.norm.weight            loaded from res_conv1_bn_gamma                of shape (64,)
[12/17 08:53:34] detectron2.checkpoint.c2_model_loading INFO: backbone.bottom_up.stem.conv1.weight                 loaded from conv1_w                           of shape (64, 3, 7, 7)
[12/17 08:53:34] detectron2.checkpoint.c2_model_loading INFO: Some model parameters or buffers are not found in the checkpoint:
  [34mbackbone.fpn_lateral2.{bias, weight}[0m
  [34mbackbone.fpn_lateral3.{bias, weight}[0m
  [34mbackbone.fpn_lateral4.{bias, weight}[0m
  [34mbackbone.fpn_lateral5.{bias, weight}[0m
  [34mbackbone.fpn_output2.{bias, weight}[0m
  [34mbackbone.fpn_output3.{bias, weight}[0m
  [34mbackbone.fpn_output4.{bias, weight}[0m
  [34mbackbone.fpn_output5.{bias, weight}[0m
  [34mpixel_mean[0m
  [34mpixel_std[0m
  [34mproposal_generator.anchor_generator.cell_anchors.{0, 1, 2, 3, 4}[0m
  [34mproposal_generator.rpn_head.anchor_deltas.{bias, weight}[0m
  [34mproposal_generator.rpn_head.conv.{bias, weight}[0m
  [34mproposal_generator.rpn_head.objectness_logits.{bias, weight}[0m
  [34mroi_heads.box_head.fc1.{bias, weight}[0m
  [34mroi_heads.box_head.fc2.{bias, weight}[0m
  [34mroi_heads.box_predictor.bbox_pred.{bias, weight}[0m
  [34mroi_heads.box_predictor.cls_score.{bias, weight}[0m
  [34mroi_heads.mask_head.deconv.{bias, weight}[0m
  [34mroi_heads.mask_head.mask_fcn1.{bias, weight}[0m
  [34mroi_heads.mask_head.mask_fcn2.{bias, weight}[0m
  [34mroi_heads.mask_head.mask_fcn3.{bias, weight}[0m
  [34mroi_heads.mask_head.mask_fcn4.{bias, weight}[0m
  [34mroi_heads.mask_head.predictor.{bias, weight}[0m
  [34msem_seg_head.p2.0.0.conv2_1.weight[0m
  [34msem_seg_head.p2.0.0.conv2_2.weight[0m
  [34msem_seg_head.p2.0.0.conv2_3.weight[0m
  [34msem_seg_head.p2.0.0.conv2_4.weight[0m
  [34msem_seg_head.p2.0.1.{bias, weight}[0m
  [34msem_seg_head.p3.0.0.conv2_1.weight[0m
  [34msem_seg_head.p3.0.0.conv2_2.weight[0m
  [34msem_seg_head.p3.0.0.conv2_3.weight[0m
  [34msem_seg_head.p3.0.0.conv2_4.weight[0m
  [34msem_seg_head.p3.0.1.{bias, weight}[0m
  [34msem_seg_head.p4.0.0.conv2_1.weight[0m
  [34msem_seg_head.p4.0.0.conv2_2.weight[0m
  [34msem_seg_head.p4.0.0.conv2_3.weight[0m
  [34msem_seg_head.p4.0.1.{bias, weight}[0m
  [34msem_seg_head.p4.1.0.conv2_1.weight[0m
  [34msem_seg_head.p4.1.0.conv2_2.weight[0m
  [34msem_seg_head.p4.1.0.conv2_3.weight[0m
  [34msem_seg_head.p4.1.0.conv2_4.weight[0m
  [34msem_seg_head.p4.1.1.{bias, weight}[0m
  [34msem_seg_head.p5.0.0.conv2_1.weight[0m
  [34msem_seg_head.p5.0.0.conv2_2.weight[0m
  [34msem_seg_head.p5.0.1.{bias, weight}[0m
  [34msem_seg_head.p5.1.0.conv2_1.weight[0m
  [34msem_seg_head.p5.1.0.conv2_2.weight[0m
  [34msem_seg_head.p5.1.0.conv2_3.weight[0m
  [34msem_seg_head.p5.1.1.{bias, weight}[0m
  [34msem_seg_head.p5.2.0.conv2_1.weight[0m
  [34msem_seg_head.p5.2.0.conv2_2.weight[0m
  [34msem_seg_head.p5.2.0.conv2_3.weight[0m
  [34msem_seg_head.p5.2.0.conv2_4.weight[0m
  [34msem_seg_head.p5.2.1.{bias, weight}[0m
  [34msem_seg_head.predictor.{bias, weight}[0m
[12/17 08:53:34] detectron2.checkpoint.c2_model_loading INFO: The checkpoint state_dict contains keys that are not used by the model:
  [35mfc1000_b[0m
  [35mfc1000_w[0m
  [35mconv1_b[0m
[12/17 08:53:34] detectron2.engine.train_loop INFO: Starting training from iteration 0
[12/20 19:28:01] detectron2.engine.hooks INFO: Overall training speed: 269998 iterations in 3 days, 10:32:41 (1.1006 s / it)
[12/20 19:28:01] detectron2.engine.hooks INFO: Total training time: 3 days, 10:34:09 (0:01:27 on hooks)
[12/20 19:28:02] detectron2.data.datasets.coco INFO: Loading /cvhci/temp/wmao/detectron2_datasets/coco/annotations/instances_val2017.json takes 1.26 seconds.
[12/20 19:28:02] detectron2.data.datasets.coco INFO: Loaded 5000 images in COCO format from /cvhci/temp/wmao/detectron2_datasets/coco/annotations/instances_val2017.json
[12/20 19:28:04] detectron2.data.datasets.coco INFO: Loaded 5000 images with semantic segmentation from /cvhci/temp/wmao/detectron2_datasets/coco/val2017
[12/20 19:28:04] detectron2.data.build INFO: Distribution of instances among all 80 categories:
[36m|   category    | #instances   |   category   | #instances   |   category    | #instances   |
|:-------------:|:-------------|:------------:|:-------------|:-------------:|:-------------|
|    person     | 10777        |   bicycle    | 314          |      car      | 1918         |
|  motorcycle   | 367          |   airplane   | 143          |      bus      | 283          |
|     train     | 190          |    truck     | 414          |     boat      | 424          |
| traffic light | 634          | fire hydrant | 101          |   stop sign   | 75           |
| parking meter | 60           |    bench     | 411          |     bird      | 427          |
|      cat      | 202          |     dog      | 218          |     horse     | 272          |
|     sheep     | 354          |     cow      | 372          |   elephant    | 252          |
|     bear      | 71           |    zebra     | 266          |    giraffe    | 232          |
|   backpack    | 371          |   umbrella   | 407          |    handbag    | 540          |
|      tie      | 252          |   suitcase   | 299          |    frisbee    | 115          |
|     skis      | 241          |  snowboard   | 69           |  sports ball  | 260          |
|     kite      | 327          | baseball bat | 145          | baseball gl.. | 148          |
|  skateboard   | 179          |  surfboard   | 267          | tennis racket | 225          |
|    bottle     | 1013         |  wine glass  | 341          |      cup      | 895          |
|     fork      | 215          |    knife     | 325          |     spoon     | 253          |
|     bowl      | 623          |    banana    | 370          |     apple     | 236          |
|   sandwich    | 177          |    orange    | 285          |   broccoli    | 312          |
|    carrot     | 365          |   hot dog    | 125          |     pizza     | 284          |
|     donut     | 328          |     cake     | 310          |     chair     | 1771         |
|     couch     | 261          | potted plant | 342          |      bed      | 163          |
| dining table  | 695          |    toilet    | 179          |      tv       | 288          |
|    laptop     | 231          |    mouse     | 106          |    remote     | 283          |
|   keyboard    | 153          |  cell phone  | 262          |   microwave   | 55           |
|     oven      | 143          |   toaster    | 9            |     sink      | 225          |
| refrigerator  | 126          |     book     | 1129         |     clock     | 267          |
|     vase      | 274          |   scissors   | 36           |  teddy bear   | 190          |
|  hair drier   | 11           |  toothbrush  | 57           |               |              |
|     total     | 36335        |              |              |               |              |[0m
[12/20 19:28:04] detectron2.data.common INFO: Serializing 5000 elements to byte tensors and concatenating them all ...
[12/20 19:28:04] detectron2.data.common INFO: Serialized dataset takes 19.73 MiB
[12/20 19:28:04] detectron2.data.dataset_mapper INFO: Augmentations used in training: [ResizeShortestEdge(short_edge_length=(800, 800), max_size=1333, sample_style='choice')]
[12/20 19:28:05] detectron2.data.datasets.coco INFO: Loading /cvhci/temp/wmao/detectron2_datasets/coco/annotations/instances_val2017.json takes 1.03 seconds.
[12/20 19:28:05] detectron2.data.datasets.coco INFO: Loaded 5000 images in COCO format from /cvhci/temp/wmao/detectron2_datasets/coco/annotations/instances_val2017.json
[12/20 19:28:06] detectron2.data.datasets.coco INFO: Loaded 5000 images with semantic segmentation from /cvhci/temp/wmao/detectron2_datasets/coco/val2017
[12/20 19:28:08] detectron2.evaluation.evaluator INFO: Start inference on 2500 images
[12/20 19:28:25] detectron2.evaluation.evaluator INFO: Inference done 11/2500. 0.1883 s / img. ETA=0:11:51
[12/20 19:28:30] detectron2.evaluation.evaluator INFO: Inference done 31/2500. 0.1820 s / img. ETA=0:10:48
[12/20 19:28:35] detectron2.evaluation.evaluator INFO: Inference done 50/2500. 0.1869 s / img. ETA=0:10:46
[12/20 19:28:40] detectron2.evaluation.evaluator INFO: Inference done 69/2500. 0.1871 s / img. ETA=0:10:43
[12/20 19:28:45] detectron2.evaluation.evaluator INFO: Inference done 88/2500. 0.1868 s / img. ETA=0:10:39
[12/20 19:28:50] detectron2.evaluation.evaluator INFO: Inference done 108/2500. 0.1866 s / img. ETA=0:10:27
[12/20 19:28:55] detectron2.evaluation.evaluator INFO: Inference done 127/2500. 0.1873 s / img. ETA=0:10:27
[12/20 19:29:00] detectron2.evaluation.evaluator INFO: Inference done 146/2500. 0.1886 s / img. ETA=0:10:22
[12/20 19:29:06] detectron2.evaluation.evaluator INFO: Inference done 166/2500. 0.1887 s / img. ETA=0:10:17
[12/20 19:29:11] detectron2.evaluation.evaluator INFO: Inference done 186/2500. 0.1889 s / img. ETA=0:10:11
[12/20 19:29:16] detectron2.evaluation.evaluator INFO: Inference done 206/2500. 0.1885 s / img. ETA=0:10:03
[12/20 19:29:21] detectron2.evaluation.evaluator INFO: Inference done 225/2500. 0.1889 s / img. ETA=0:09:58
[12/20 19:29:26] detectron2.evaluation.evaluator INFO: Inference done 245/2500. 0.1884 s / img. ETA=0:09:52
[12/20 19:29:31] detectron2.evaluation.evaluator INFO: Inference done 264/2500. 0.1884 s / img. ETA=0:09:47
[12/20 19:29:36] detectron2.evaluation.evaluator INFO: Inference done 283/2500. 0.1887 s / img. ETA=0:09:44
[12/20 19:29:42] detectron2.evaluation.evaluator INFO: Inference done 302/2500. 0.1887 s / img. ETA=0:09:40
[12/20 19:29:47] detectron2.evaluation.evaluator INFO: Inference done 319/2500. 0.1893 s / img. ETA=0:09:39
[12/20 19:29:52] detectron2.evaluation.evaluator INFO: Inference done 337/2500. 0.1896 s / img. ETA=0:09:36
[12/20 19:29:57] detectron2.evaluation.evaluator INFO: Inference done 355/2500. 0.1899 s / img. ETA=0:09:33
[12/20 19:30:02] detectron2.evaluation.evaluator INFO: Inference done 374/2500. 0.1899 s / img. ETA=0:09:28
[12/20 19:30:07] detectron2.evaluation.evaluator INFO: Inference done 393/2500. 0.1903 s / img. ETA=0:09:24
[12/20 19:30:12] detectron2.evaluation.evaluator INFO: Inference done 411/2500. 0.1906 s / img. ETA=0:09:21
[12/20 19:30:17] detectron2.evaluation.evaluator INFO: Inference done 428/2500. 0.1904 s / img. ETA=0:09:19
[12/20 19:30:23] detectron2.evaluation.evaluator INFO: Inference done 447/2500. 0.1906 s / img. ETA=0:09:15
[12/20 19:30:28] detectron2.evaluation.evaluator INFO: Inference done 467/2500. 0.1907 s / img. ETA=0:09:09
[12/20 19:30:33] detectron2.evaluation.evaluator INFO: Inference done 486/2500. 0.1908 s / img. ETA=0:09:04
[12/20 19:30:38] detectron2.evaluation.evaluator INFO: Inference done 505/2500. 0.1909 s / img. ETA=0:08:59
[12/20 19:30:44] detectron2.evaluation.evaluator INFO: Inference done 524/2500. 0.1910 s / img. ETA=0:08:54
[12/20 19:30:49] detectron2.evaluation.evaluator INFO: Inference done 542/2500. 0.1912 s / img. ETA=0:08:50
[12/20 19:30:54] detectron2.evaluation.evaluator INFO: Inference done 561/2500. 0.1914 s / img. ETA=0:08:45
[12/20 19:30:59] detectron2.evaluation.evaluator INFO: Inference done 580/2500. 0.1915 s / img. ETA=0:08:40
[12/20 19:31:04] detectron2.evaluation.evaluator INFO: Inference done 599/2500. 0.1917 s / img. ETA=0:08:35
[12/20 19:31:09] detectron2.evaluation.evaluator INFO: Inference done 618/2500. 0.1916 s / img. ETA=0:08:30
[12/20 19:31:14] detectron2.evaluation.evaluator INFO: Inference done 635/2500. 0.1920 s / img. ETA=0:08:27
[12/20 19:31:20] detectron2.evaluation.evaluator INFO: Inference done 653/2500. 0.1921 s / img. ETA=0:08:22
[12/20 19:31:25] detectron2.evaluation.evaluator INFO: Inference done 672/2500. 0.1920 s / img. ETA=0:08:17
[12/20 19:31:30] detectron2.evaluation.evaluator INFO: Inference done 691/2500. 0.1920 s / img. ETA=0:08:12
[12/20 19:31:35] detectron2.evaluation.evaluator INFO: Inference done 709/2500. 0.1920 s / img. ETA=0:08:08
[12/20 19:31:40] detectron2.evaluation.evaluator INFO: Inference done 726/2500. 0.1921 s / img. ETA=0:08:04
[12/20 19:31:45] detectron2.evaluation.evaluator INFO: Inference done 745/2500. 0.1922 s / img. ETA=0:07:59
[12/20 19:31:51] detectron2.evaluation.evaluator INFO: Inference done 764/2500. 0.1922 s / img. ETA=0:07:54
[12/20 19:31:56] detectron2.evaluation.evaluator INFO: Inference done 781/2500. 0.1924 s / img. ETA=0:07:50
[12/20 19:32:01] detectron2.evaluation.evaluator INFO: Inference done 799/2500. 0.1926 s / img. ETA=0:07:46
[12/20 19:32:06] detectron2.evaluation.evaluator INFO: Inference done 817/2500. 0.1926 s / img. ETA=0:07:41
[12/20 19:32:11] detectron2.evaluation.evaluator INFO: Inference done 836/2500. 0.1925 s / img. ETA=0:07:36
[12/20 19:32:16] detectron2.evaluation.evaluator INFO: Inference done 855/2500. 0.1925 s / img. ETA=0:07:31
[12/20 19:32:22] detectron2.evaluation.evaluator INFO: Inference done 873/2500. 0.1927 s / img. ETA=0:07:26
[12/20 19:32:27] detectron2.evaluation.evaluator INFO: Inference done 893/2500. 0.1925 s / img. ETA=0:07:20
[12/20 19:32:32] detectron2.evaluation.evaluator INFO: Inference done 909/2500. 0.1924 s / img. ETA=0:07:17
[12/20 19:32:37] detectron2.evaluation.evaluator INFO: Inference done 928/2500. 0.1924 s / img. ETA=0:07:12
[12/20 19:32:42] detectron2.evaluation.evaluator INFO: Inference done 944/2500. 0.1927 s / img. ETA=0:07:09
[12/20 19:32:47] detectron2.evaluation.evaluator INFO: Inference done 963/2500. 0.1928 s / img. ETA=0:07:03
[12/20 19:32:53] detectron2.evaluation.evaluator INFO: Inference done 983/2500. 0.1926 s / img. ETA=0:06:57
[12/20 19:32:58] detectron2.evaluation.evaluator INFO: Inference done 1003/2500. 0.1925 s / img. ETA=0:06:51
[12/20 19:33:03] detectron2.evaluation.evaluator INFO: Inference done 1021/2500. 0.1926 s / img. ETA=0:06:47
[12/20 19:33:08] detectron2.evaluation.evaluator INFO: Inference done 1041/2500. 0.1924 s / img. ETA=0:06:41
[12/20 19:33:13] detectron2.evaluation.evaluator INFO: Inference done 1059/2500. 0.1925 s / img. ETA=0:06:36
[12/20 19:33:18] detectron2.evaluation.evaluator INFO: Inference done 1077/2500. 0.1925 s / img. ETA=0:06:31
[12/20 19:33:23] detectron2.evaluation.evaluator INFO: Inference done 1095/2500. 0.1925 s / img. ETA=0:06:27
[12/20 19:33:28] detectron2.evaluation.evaluator INFO: Inference done 1113/2500. 0.1925 s / img. ETA=0:06:22
[12/20 19:33:33] detectron2.evaluation.evaluator INFO: Inference done 1131/2500. 0.1926 s / img. ETA=0:06:17
[12/20 19:33:38] detectron2.evaluation.evaluator INFO: Inference done 1149/2500. 0.1926 s / img. ETA=0:06:12
[12/20 19:33:44] detectron2.evaluation.evaluator INFO: Inference done 1168/2500. 0.1926 s / img. ETA=0:06:07
[12/20 19:33:49] detectron2.evaluation.evaluator INFO: Inference done 1187/2500. 0.1926 s / img. ETA=0:06:01
[12/20 19:33:54] detectron2.evaluation.evaluator INFO: Inference done 1204/2500. 0.1927 s / img. ETA=0:05:57
[12/20 19:33:59] detectron2.evaluation.evaluator INFO: Inference done 1224/2500. 0.1926 s / img. ETA=0:05:51
[12/20 19:34:04] detectron2.evaluation.evaluator INFO: Inference done 1243/2500. 0.1927 s / img. ETA=0:05:46
[12/20 19:34:09] detectron2.evaluation.evaluator INFO: Inference done 1262/2500. 0.1927 s / img. ETA=0:05:41
[12/20 19:34:15] detectron2.evaluation.evaluator INFO: Inference done 1281/2500. 0.1927 s / img. ETA=0:05:35
[12/20 19:34:20] detectron2.evaluation.evaluator INFO: Inference done 1300/2500. 0.1927 s / img. ETA=0:05:30
[12/20 19:34:25] detectron2.evaluation.evaluator INFO: Inference done 1320/2500. 0.1926 s / img. ETA=0:05:24
[12/20 19:34:30] detectron2.evaluation.evaluator INFO: Inference done 1341/2500. 0.1925 s / img. ETA=0:05:18
[12/20 19:34:35] detectron2.evaluation.evaluator INFO: Inference done 1360/2500. 0.1925 s / img. ETA=0:05:13
[12/20 19:34:40] detectron2.evaluation.evaluator INFO: Inference done 1380/2500. 0.1924 s / img. ETA=0:05:07
[12/20 19:34:45] detectron2.evaluation.evaluator INFO: Inference done 1400/2500. 0.1923 s / img. ETA=0:05:01
[12/20 19:34:51] detectron2.evaluation.evaluator INFO: Inference done 1419/2500. 0.1924 s / img. ETA=0:04:56
[12/20 19:34:56] detectron2.evaluation.evaluator INFO: Inference done 1439/2500. 0.1923 s / img. ETA=0:04:50
[12/20 19:35:01] detectron2.evaluation.evaluator INFO: Inference done 1457/2500. 0.1923 s / img. ETA=0:04:45
[12/20 19:35:06] detectron2.evaluation.evaluator INFO: Inference done 1476/2500. 0.1923 s / img. ETA=0:04:40
[12/20 19:35:11] detectron2.evaluation.evaluator INFO: Inference done 1497/2500. 0.1921 s / img. ETA=0:04:34
[12/20 19:35:16] detectron2.evaluation.evaluator INFO: Inference done 1514/2500. 0.1921 s / img. ETA=0:04:29
[12/20 19:35:21] detectron2.evaluation.evaluator INFO: Inference done 1531/2500. 0.1925 s / img. ETA=0:04:25
[12/20 19:35:27] detectron2.evaluation.evaluator INFO: Inference done 1549/2500. 0.1925 s / img. ETA=0:04:20
[12/20 19:35:32] detectron2.evaluation.evaluator INFO: Inference done 1568/2500. 0.1925 s / img. ETA=0:04:15
[12/20 19:35:37] detectron2.evaluation.evaluator INFO: Inference done 1586/2500. 0.1925 s / img. ETA=0:04:10
[12/20 19:35:42] detectron2.evaluation.evaluator INFO: Inference done 1606/2500. 0.1925 s / img. ETA=0:04:05
[12/20 19:35:47] detectron2.evaluation.evaluator INFO: Inference done 1626/2500. 0.1925 s / img. ETA=0:03:59
[12/20 19:35:52] detectron2.evaluation.evaluator INFO: Inference done 1645/2500. 0.1925 s / img. ETA=0:03:54
[12/20 19:35:58] detectron2.evaluation.evaluator INFO: Inference done 1662/2500. 0.1925 s / img. ETA=0:03:49
[12/20 19:36:03] detectron2.evaluation.evaluator INFO: Inference done 1680/2500. 0.1925 s / img. ETA=0:03:45
[12/20 19:36:08] detectron2.evaluation.evaluator INFO: Inference done 1700/2500. 0.1925 s / img. ETA=0:03:39
[12/20 19:36:13] detectron2.evaluation.evaluator INFO: Inference done 1721/2500. 0.1924 s / img. ETA=0:03:33
[12/20 19:36:18] detectron2.evaluation.evaluator INFO: Inference done 1741/2500. 0.1922 s / img. ETA=0:03:27
[12/20 19:36:23] detectron2.evaluation.evaluator INFO: Inference done 1759/2500. 0.1923 s / img. ETA=0:03:22
[12/20 19:36:29] detectron2.evaluation.evaluator INFO: Inference done 1778/2500. 0.1923 s / img. ETA=0:03:17
[12/20 19:36:34] detectron2.evaluation.evaluator INFO: Inference done 1796/2500. 0.1923 s / img. ETA=0:03:12
[12/20 19:36:39] detectron2.evaluation.evaluator INFO: Inference done 1816/2500. 0.1922 s / img. ETA=0:03:07
[12/20 19:36:44] detectron2.evaluation.evaluator INFO: Inference done 1836/2500. 0.1922 s / img. ETA=0:03:01
[12/20 19:36:49] detectron2.evaluation.evaluator INFO: Inference done 1857/2500. 0.1921 s / img. ETA=0:02:55
[12/20 19:36:54] detectron2.evaluation.evaluator INFO: Inference done 1876/2500. 0.1921 s / img. ETA=0:02:50
[12/20 19:37:00] detectron2.evaluation.evaluator INFO: Inference done 1895/2500. 0.1921 s / img. ETA=0:02:45
[12/20 19:37:05] detectron2.evaluation.evaluator INFO: Inference done 1914/2500. 0.1921 s / img. ETA=0:02:40
[12/20 19:37:10] detectron2.evaluation.evaluator INFO: Inference done 1933/2500. 0.1921 s / img. ETA=0:02:34
[12/20 19:37:15] detectron2.evaluation.evaluator INFO: Inference done 1952/2500. 0.1921 s / img. ETA=0:02:29
[12/20 19:37:21] detectron2.evaluation.evaluator INFO: Inference done 1971/2500. 0.1921 s / img. ETA=0:02:24
[12/20 19:37:26] detectron2.evaluation.evaluator INFO: Inference done 1990/2500. 0.1921 s / img. ETA=0:02:19
[12/20 19:37:31] detectron2.evaluation.evaluator INFO: Inference done 2008/2500. 0.1921 s / img. ETA=0:02:14
[12/20 19:37:36] detectron2.evaluation.evaluator INFO: Inference done 2028/2500. 0.1921 s / img. ETA=0:02:08
[12/20 19:37:41] detectron2.evaluation.evaluator INFO: Inference done 2047/2500. 0.1921 s / img. ETA=0:02:03
[12/20 19:37:46] detectron2.evaluation.evaluator INFO: Inference done 2065/2500. 0.1921 s / img. ETA=0:01:58
[12/20 19:37:51] detectron2.evaluation.evaluator INFO: Inference done 2084/2500. 0.1921 s / img. ETA=0:01:53
[12/20 19:37:56] detectron2.evaluation.evaluator INFO: Inference done 2103/2500. 0.1921 s / img. ETA=0:01:48
[12/20 19:38:02] detectron2.evaluation.evaluator INFO: Inference done 2123/2500. 0.1921 s / img. ETA=0:01:42
[12/20 19:38:07] detectron2.evaluation.evaluator INFO: Inference done 2142/2500. 0.1921 s / img. ETA=0:01:37
[12/20 19:38:12] detectron2.evaluation.evaluator INFO: Inference done 2160/2500. 0.1921 s / img. ETA=0:01:32
[12/20 19:38:17] detectron2.evaluation.evaluator INFO: Inference done 2180/2500. 0.1920 s / img. ETA=0:01:27
[12/20 19:38:22] detectron2.evaluation.evaluator INFO: Inference done 2199/2500. 0.1920 s / img. ETA=0:01:22
[12/20 19:38:27] detectron2.evaluation.evaluator INFO: Inference done 2218/2500. 0.1920 s / img. ETA=0:01:16
[12/20 19:38:32] detectron2.evaluation.evaluator INFO: Inference done 2237/2500. 0.1920 s / img. ETA=0:01:11
[12/20 19:38:37] detectron2.evaluation.evaluator INFO: Inference done 2256/2500. 0.1919 s / img. ETA=0:01:06
[12/20 19:38:43] detectron2.evaluation.evaluator INFO: Inference done 2272/2500. 0.1920 s / img. ETA=0:01:02
[12/20 19:38:48] detectron2.evaluation.evaluator INFO: Inference done 2292/2500. 0.1919 s / img. ETA=0:00:56
[12/20 19:38:53] detectron2.evaluation.evaluator INFO: Inference done 2310/2500. 0.1919 s / img. ETA=0:00:51
[12/20 19:38:58] detectron2.evaluation.evaluator INFO: Inference done 2329/2500. 0.1918 s / img. ETA=0:00:46
[12/20 19:39:03] detectron2.evaluation.evaluator INFO: Inference done 2349/2500. 0.1918 s / img. ETA=0:00:41
[12/20 19:39:08] detectron2.evaluation.evaluator INFO: Inference done 2368/2500. 0.1918 s / img. ETA=0:00:36
[12/20 19:39:13] detectron2.evaluation.evaluator INFO: Inference done 2388/2500. 0.1918 s / img. ETA=0:00:30
[12/20 19:39:18] detectron2.evaluation.evaluator INFO: Inference done 2408/2500. 0.1918 s / img. ETA=0:00:25
[12/20 19:39:24] detectron2.evaluation.evaluator INFO: Inference done 2426/2500. 0.1918 s / img. ETA=0:00:20
[12/20 19:39:29] detectron2.evaluation.evaluator INFO: Inference done 2446/2500. 0.1918 s / img. ETA=0:00:14
[12/20 19:39:34] detectron2.evaluation.evaluator INFO: Inference done 2466/2500. 0.1918 s / img. ETA=0:00:09
[12/20 19:39:39] detectron2.evaluation.evaluator INFO: Inference done 2486/2500. 0.1917 s / img. ETA=0:00:03
[12/20 19:39:43] detectron2.evaluation.evaluator INFO: Total inference time: 0:11:19.901847 (0.272506 s / img per device, on 2 devices)
[12/20 19:39:43] detectron2.evaluation.evaluator INFO: Total inference pure compute time: 0:07:58 (0.191699 s / img per device, on 2 devices)
